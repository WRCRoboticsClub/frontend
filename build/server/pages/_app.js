/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\n\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst prefetched = {};\n\nfunction prefetch(router, href, as, options) {\n  if (true) return;\n  if (!(0, _router).isLocalURL(href)) return; // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n\n  router.prefetch(href, as, options).catch(err => {\n    if (true) {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n  const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale; // Join on an invalid URI character\n\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\n\nfunction isModifiedEvent(event) {\n  const {\n    target\n  } = event.currentTarget;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\n\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n  const {\n    nodeName\n  } = e.currentTarget;\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n\n  e.preventDefault(); //  avoid scroll for urls with anchor refs\n\n  if (scroll == null && as.indexOf('#') >= 0) {\n    scroll = false;\n  } // replace state instead of push if prop is present\n\n\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll\n  });\n}\n\nfunction Link(props) {\n  if (true) {\n    function createPropError(args) {\n      return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : ''));\n    } // TypeScript trick for type-guarding:\n\n\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // TypeScript trick for type-guarding:\n\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const hasWarned = _react.default.useRef(false);\n\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n    }\n  }\n\n  const p = props.prefetch !== false;\n  const router = (0, _router1).useRouter();\n\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, props.href, true);\n    return {\n      href: resolvedHref,\n      as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n    };\n  }, [router, props.href, props.as]);\n\n  let {\n    children,\n    replace,\n    shallow,\n    scroll,\n    locale\n  } = props;\n\n  if (typeof children === 'string') {\n    children = /*#__PURE__*/_react.default.createElement(\"a\", null, children);\n  } // This will return the first child, if multiple are provided it will throw an error\n\n\n  let child;\n\n  if (true) {\n    try {\n      child = _react.default.Children.only(children);\n    } catch (err) {\n      throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : ''));\n    }\n  } else {}\n\n  const childRef = child && typeof child === 'object' && child.ref;\n  const [setIntersectionRef, isVisible] = (0, _useIntersection).useIntersection({\n    rootMargin: '200px'\n  });\n\n  const setRef = _react.default.useCallback(el => {\n    setIntersectionRef(el);\n\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [childRef, setIntersectionRef]);\n\n  _react.default.useEffect(() => {\n    const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n    const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale\n      });\n    }\n  }, [as, href, isVisible, locale, p, router]);\n\n  const childProps = {\n    ref: setRef,\n    onClick: e => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n      }\n    }\n  };\n\n  childProps.onMouseEnter = e => {\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e);\n    }\n\n    if ((0, _router).isLocalURL(href)) {\n      prefetch(router, href, as, {\n        priority: true\n      });\n    }\n  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n\n\n  if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale; // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n\n    const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n    childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n  }\n\n  return /*#__PURE__*/_react.default.cloneElement(child, childProps);\n}\n\nvar _default = Link;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\n\nfunction removePathTrailingSlash(path) {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\n\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUN6Q0csRUFBQUEsS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELCtCQUFBLEdBQWtDRSx1QkFBbEM7QUFDQUYsa0NBQUEsR0FBcUMsS0FBSyxDQUExQzs7QUFDQSxTQUFTRSx1QkFBVCxDQUFpQ0UsSUFBakMsRUFBdUM7QUFDbkMsU0FBT0EsSUFBSSxDQUFDQyxRQUFMLENBQWMsR0FBZCxLQUFzQkQsSUFBSSxLQUFLLEdBQS9CLEdBQXFDQSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFYLEVBQWMsQ0FBQyxDQUFmLENBQXJDLEdBQXlERixJQUFoRTtBQUNIOztBQUNELE1BQU1ELDBCQUEwQixHQUFHSSxNQUFBLEdBQXFDSCxDQUFyQyxHQVEvQkYsdUJBUko7QUFTQUYsa0NBQUEsR0FBcUNHLDBCQUFyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2ggPSByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaDtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG5mdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguZW5kc1dpdGgoJy8nKSAmJiBwYXRoICE9PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5jb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSCA/IChwYXRoKT0+e1xuICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRoKSkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aCk7XG4gICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhdGggKyAnLyc7XG4gICAgfVxufSA6IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2giLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsInBhdGgiLCJlbmRzV2l0aCIsInNsaWNlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\n\nconst requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function (cb) {\n  let start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function () {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.requestIdleCallback = requestIdleCallback;\n\nconst cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function (id) {\n  return clearTimeout(id);\n};\n\nexports.cancelIdleCallback = cancelIdleCallback;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUN6Q0csRUFBQUEsS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELDBCQUFBLEdBQTZCQSwyQkFBQSxHQUE4QixLQUFLLENBQWhFOztBQUNBLE1BQU1HLG1CQUFtQixHQUFHLE9BQU9DLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JBLElBQUksQ0FBQ0QsbUJBQXBDLElBQTJEQyxJQUFJLENBQUNELG1CQUFMLENBQXlCRSxJQUF6QixDQUE4QkMsTUFBOUIsQ0FBM0QsSUFBb0csVUFBU0MsRUFBVCxFQUFhO0FBQ3pJLE1BQUlDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEVBQVo7QUFDQSxTQUFPQyxVQUFVLENBQUMsWUFBVztBQUN6QkosSUFBQUEsRUFBRSxDQUFDO0FBQ0NLLE1BQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLE1BQUFBLGFBQWEsRUFBRSxZQUFXO0FBQ3RCLGVBQU9DLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWSxNQUFNTixJQUFJLENBQUNDLEdBQUwsS0FBYUYsS0FBbkIsQ0FBWixDQUFQO0FBQ0g7QUFKRixLQUFELENBQUY7QUFNSCxHQVBnQixFQU9kLENBUGMsQ0FBakI7QUFRSCxDQVZEOztBQVdBUiwyQkFBQSxHQUE4QkcsbUJBQTlCOztBQUNBLE1BQU1ELGtCQUFrQixHQUFHLE9BQU9FLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JBLElBQUksQ0FBQ0Ysa0JBQXBDLElBQTBERSxJQUFJLENBQUNGLGtCQUFMLENBQXdCRyxJQUF4QixDQUE2QkMsTUFBN0IsQ0FBMUQsSUFBa0csVUFBU1UsRUFBVCxFQUFhO0FBQ3RJLFNBQU9DLFlBQVksQ0FBQ0QsRUFBRCxDQUFuQjtBQUNILENBRkQ7O0FBR0FoQiwwQkFBQSxHQUE2QkUsa0JBQTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcz8xZTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBleHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB2b2lkIDA7XG5jb25zdCByZXF1ZXN0SWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjayAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGNiKSB7XG4gICAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICB0aW1lUmVtYWluaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEpO1xufTtcbmV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHJlcXVlc3RJZGxlQ2FsbGJhY2s7XG5jb25zdCBjYW5jZWxJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2sgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGlkKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChpZCk7XG59O1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBjYW5jZWxJZGxlQ2FsbGJhY2s7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtaWRsZS1jYWxsYmFjay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsImJpbmQiLCJ3aW5kb3ciLCJjYiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsInNldFRpbWVvdXQiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJpZCIsImNsZWFyVGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\n\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nconst MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  let entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  let resolver;\n  const prom = new Promise(resolve => {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? generator() // eslint-disable-next-line no-sequences\n  .then(value => (resolver(value), value)).catch(err => {\n    map.delete(key);\n    throw err;\n  }) : prom;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise((res, rej) => {\n    const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n\n    if (document.querySelector(selector)) {\n      return res();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = `prefetch`;\n    link.crossOrigin = undefined;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction appendScript(src, script) {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = () => reject(markAssetError(new Error(`Failed to load script: ${src}`))); // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n} // We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\n\n\nlet devBuildPromise; // Resolve a promise that times out after given amount of milliseconds.\n\nfunction resolvePromiseWithTimeout(p, ms, err) {\n  return new Promise((resolve, reject) => {\n    let cancelled = false;\n    p.then(r => {\n      // Resolved, cancel the timeout\n      cancelled = true;\n      resolve(r);\n    }).catch(reject); // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n\n    if (true) {\n      (devBuildPromise || Promise.resolve()).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => setTimeout(() => {\n          if (!cancelled) {\n            reject(err);\n          }\n        }, ms));\n      });\n    }\n\n    if (false) {}\n  });\n}\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  const onBuildManifest = new Promise(resolve => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\n\nfunction getMiddlewareManifest() {\n  if (self.__MIDDLEWARE_MANIFEST) {\n    return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n  }\n\n  const onMiddlewareManifest = new Promise(resolve => {\n    const cb = self.__MIDDLEWARE_MANIFEST_CB;\n\n    self.__MIDDLEWARE_MANIFEST_CB = () => {\n      resolve(self.__MIDDLEWARE_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client middleware manifest')));\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    return Promise.resolve({\n      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js'))],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(manifest => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n    }\n\n    const allFiles = manifest[route].map(entry => assetPrefix + '/_next/' + encodeURI(entry));\n    return {\n      scripts: allFiles.filter(v => v.endsWith('.js')),\n      css: allFiles.filter(v => v.endsWith('.css'))\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  const entrypoints = new Map();\n  const loadedScripts = new Map();\n  const styleSheets = new Map();\n  const routes = new Map();\n\n  function maybeExecuteScript(src) {\n    // With HMR we might need to \"reload\" scripts when they are\n    // disposed and readded. Executing scripts twice has no functional\n    // differences\n    if (false) {} else {\n      return appendScript(src);\n    }\n  }\n\n  function fetchStyleSheet(href) {\n    let prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to load stylesheet: ${href}`);\n      }\n\n      return res.text().then(text => ({\n        href: href,\n        content: text\n      }));\n    }).catch(err => {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n\n    onEntrypoint(route, execute) {\n      (execute ? Promise.resolve().then(() => execute()).then(exports => ({\n        component: exports && exports.default || exports,\n        exports: exports\n      }), err => ({\n        error: err\n      })) : Promise.resolve(undefined)).then(input => {\n        const old = entrypoints.get(route);\n\n        if (old && 'resolve' in old) {\n          if (input) {\n            entrypoints.set(route, input);\n            old.resolve(input);\n          }\n        } else {\n          if (input) {\n            entrypoints.set(route, input);\n          } else {\n            entrypoints.delete(route);\n          } // when this entrypoint has been resolved before\n          // the route is outdated and we want to invalidate\n          // this cache entry\n\n\n          routes.delete(route);\n        }\n      });\n    },\n\n    loadRoute(route, prefetch) {\n      return withFuture(route, routes, () => {\n        let devBuildPromiseResolve;\n\n        if (true) {\n          devBuildPromise = new Promise(resolve => {\n            devBuildPromiseResolve = resolve;\n          });\n        }\n\n        return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({\n          scripts,\n          css\n        }) => {\n          return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n        }).then(res => {\n          return this.whenEntrypoint(route).then(entrypoint => ({\n            entrypoint,\n            styles: res[1]\n          }));\n        }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({\n          entrypoint,\n          styles\n        }) => {\n          const res = Object.assign({\n            styles: styles\n          }, entrypoint);\n          return 'error' in entrypoint ? entrypoint : res;\n        }).catch(err => {\n          if (prefetch) {\n            // we don't want to cache errors during prefetch\n            throw err;\n          }\n\n          return {\n            error: err\n          };\n        }).finally(() => {\n          return devBuildPromiseResolve === null || devBuildPromiseResolve === void 0 ? void 0 : devBuildPromiseResolve();\n        });\n      });\n    },\n\n    prefetch(route) {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(output => Promise.all(canPrefetch ? output.scripts.map(script => prefetchViaDom(script, 'script')) : [])).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}));\n      }).catch( // swallow prefetch errors\n      () => {});\n    }\n\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n  enumerable: true,\n  get: function () {\n    return _router.default;\n  }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n  enumerable: true,\n  get: function () {\n    return _withRouter.default;\n  }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\n\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\n\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\n\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst singletonRouter = {\n  router: null,\n  readyCallbacks: [],\n\n  ready(cb) {\n    if (this.router) return cb();\n\n    if (false) {}\n  }\n\n}; // Create public properties and methods of the router in the singletonRouter\n\nconst urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady', 'isPreview', 'isLocaleDomain', 'domainLocales'];\nconst routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];\nconst coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it\n\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return _router.default.events;\n  }\n\n});\nurlPropertyFields.forEach(field => {\n  // Here we need to use Object.defineProperty because we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter();\n      return router[field];\n    }\n\n  });\n});\ncoreMethodFields.forEach(field => {\n  singletonRouter[field] = (...args) => {\n    const router = getRouter();\n    return router[field](...args);\n  };\n});\nrouterEvents.forEach(event => {\n  singletonRouter.ready(() => {\n    _router.default.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n      const _singletonRouter = singletonRouter;\n\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args);\n        } catch (err) {\n          console.error(`Error when running the Router event: ${eventField}`);\n          console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + '');\n        }\n      }\n    });\n  });\n});\n\nfunction getRouter() {\n  if (!singletonRouter.router) {\n    const message = 'No router instance found.\\n' + 'You should only use \"next/router\" on the client side of your app.\\n';\n    throw new Error(message);\n  }\n\n  return singletonRouter.router;\n}\n\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\n\nfunction useRouter() {\n  return _react.default.useContext(_routerContext.RouterContext);\n}\n\nfunction createRouter(...args) {\n  singletonRouter.router = new _router.default(...args);\n  singletonRouter.readyCallbacks.forEach(cb => cb());\n  singletonRouter.readyCallbacks = [];\n  return singletonRouter.router;\n}\n\nfunction makePublicRouterInstance(router) {\n  const scopedRouter = router;\n  const instance = {};\n\n  for (const property of urlPropertyFields) {\n    if (typeof scopedRouter[property] === 'object') {\n      instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful\n      ;\n      continue;\n    }\n\n    instance[property] = scopedRouter[property];\n  } // Events is a static property on the router, the router doesn't have to be initialized to use it\n\n\n  instance.events = _router.default.events;\n  coreMethodFields.forEach(field => {\n    instance[field] = (...args) => {\n      return scopedRouter[field](...args);\n    };\n  });\n  return instance;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useIntersection = useIntersection;\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined';\n\nfunction useIntersection({\n  rootRef,\n  rootMargin,\n  disabled\n}) {\n  const isDisabled = disabled || !hasIntersectionObserver;\n  const unobserve = (0, _react).useRef();\n  const [visible, setVisible] = (0, _react).useState(false);\n  const [root, setRoot] = (0, _react).useState(rootRef ? rootRef.current : null);\n  const setRef = (0, _react).useCallback(el => {\n    if (unobserve.current) {\n      unobserve.current();\n      unobserve.current = undefined;\n    }\n\n    if (isDisabled || visible) return;\n\n    if (el && el.tagName) {\n      unobserve.current = observe(el, isVisible => isVisible && setVisible(isVisible), {\n        root,\n        rootMargin\n      });\n    }\n  }, [isDisabled, root, rootMargin, visible]);\n  (0, _react).useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) {\n        const idleCallback = (0, _requestIdleCallback).requestIdleCallback(() => setVisible(true));\n        return () => (0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n      }\n    }\n  }, [visible]);\n  (0, _react).useEffect(() => {\n    if (rootRef) setRoot(rootRef.current);\n  }, [rootRef]);\n  return [setRef, visible];\n}\n\nfunction observe(element, callback, options) {\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  elements.set(element, callback);\n  observer.observe(element);\n  return function unobserve() {\n    elements.delete(element);\n    observer.unobserve(element); // Destroy observer when there's nothing left to watch:\n\n    if (elements.size === 0) {\n      observer.disconnect();\n      observers.delete(id);\n    }\n  };\n}\n\nconst observers = new Map();\n\nfunction createObserver(options) {\n  const id = options.rootMargin || '';\n  let instance = observers.get(id);\n\n  if (instance) {\n    return instance;\n  }\n\n  const elements = new Map();\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      const callback = elements.get(entry.target);\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n\n      if (callback && isVisible) {\n        callback(isVisible);\n      }\n    });\n  }, options);\n  observers.set(id, instance = {\n    id,\n    observer,\n    elements\n  });\n  return instance;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = withRouter;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction withRouter(ComposedComponent) {\n  function WithRouterWrapper(props) {\n    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({\n      router: (0, _router).useRouter()\n    }, props));\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (true) {\n    const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouterWrapper.displayName = `withRouter(${name})`;\n  }\n\n  return WithRouterWrapper;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0FBQ3pDRyxFQUFBQSxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsa0JBQUEsR0FBa0JHLFVBQWxCOztBQUNBLElBQUlDLE1BQU0sR0FBR0Msc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsb0JBQUQsQ0FBUixDQUFuQzs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQUQsQ0FBckI7O0FBQ0EsU0FBU0Qsc0JBQVQsQ0FBZ0NHLEdBQWhDLEVBQXFDO0FBQ2pDLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QjtBQUNqQ04sSUFBQUEsT0FBTyxFQUFFTTtBQUR3QixHQUFyQztBQUdIOztBQUNELFNBQVNMLFVBQVQsQ0FBb0JPLGlCQUFwQixFQUF1QztBQUNuQyxXQUFTQyxpQkFBVCxDQUEyQkMsS0FBM0IsRUFBa0M7QUFDOUIsV0FBTyxhQUFjUixNQUFNLENBQUNGLE9BQVAsQ0FBZVcsYUFBZixDQUE2QkgsaUJBQTdCLEVBQWdEWixNQUFNLENBQUNnQixNQUFQLENBQWM7QUFDL0VDLE1BQUFBLE1BQU0sRUFBRSxDQUFDLEdBQUdSLE9BQUosRUFBYVMsU0FBYjtBQUR1RSxLQUFkLEVBRWxFSixLQUZrRSxDQUFoRCxDQUFyQjtBQUdIOztBQUNERCxFQUFBQSxpQkFBaUIsQ0FBQ00sZUFBbEIsR0FBb0NQLGlCQUFpQixDQUFDTyxlQUF0RDtBQUNBTixFQUFBQSxpQkFBaUIsQ0FBQ08sbUJBQWxCLEdBQXdDUixpQkFBaUIsQ0FBQ1EsbUJBQTFEOztBQUNBLFlBQTJDO0FBQ3ZDLFVBQU1DLElBQUksR0FBR1QsaUJBQWlCLENBQUNVLFdBQWxCLElBQWlDVixpQkFBaUIsQ0FBQ1MsSUFBbkQsSUFBMkQsU0FBeEU7QUFDQVIsSUFBQUEsaUJBQWlCLENBQUNTLFdBQWxCLEdBQWlDLGNBQWFELElBQUssR0FBbkQ7QUFDSDs7QUFDRCxTQUFPUixpQkFBUDtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3dpdGgtcm91dGVyLmpzP2FjN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB3aXRoUm91dGVyO1xudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBfcm91dGVyID0gcmVxdWlyZShcIi4vcm91dGVyXCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb3NlZENvbXBvbmVudCkge1xuICAgIGZ1bmN0aW9uIFdpdGhSb3V0ZXJXcmFwcGVyKHByb3BzKSB7XG4gICAgICAgIHJldHVybigvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ29tcG9zZWRDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgcm91dGVyOiAoMCwgX3JvdXRlcikudXNlUm91dGVyKClcbiAgICAgICAgfSwgcHJvcHMpKSk7XG4gICAgfVxuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmdldEluaXRpYWxQcm9wcyA9IENvbXBvc2VkQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcztcbiAgICBXaXRoUm91dGVyV3JhcHBlci5vcmlnR2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQub3JpZ0dldEluaXRpYWxQcm9wcztcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zdCBuYW1lID0gQ29tcG9zZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9zZWRDb21wb25lbnQubmFtZSB8fCAnVW5rbm93bic7XG4gICAgICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmRpc3BsYXlOYW1lID0gYHdpdGhSb3V0ZXIoJHtuYW1lfSlgO1xuICAgIH1cbiAgICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpdGgtcm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJ3aXRoUm91dGVyIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcm91dGVyIiwib2JqIiwiX19lc01vZHVsZSIsIkNvbXBvc2VkQ29tcG9uZW50IiwiV2l0aFJvdXRlcldyYXBwZXIiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJhc3NpZ24iLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJnZXRJbml0aWFsUHJvcHMiLCJvcmlnR2V0SW5pdGlhbFByb3BzIiwibmFtZSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\n\nvar _isError = _interopRequireWildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\n\nvar _denormalizePagePath = __webpack_require__(/*! ../../../server/denormalize-page-path */ \"../../../server/denormalize-page-path\");\n\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\n\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../shared/lib/utils\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\n\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\n\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\n\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\n\nvar _getMiddlewareRegex = __webpack_require__(/*! ./utils/get-middleware-regex */ \"./utils/get-middleware-regex\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nlet detectDomainLocale;\n\nif (false) {}\n\nconst basePath =  false || '';\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\n\nfunction addPathPrefix(path, prefix) {\n  if (!path.startsWith('/') || !prefix) {\n    return path;\n  }\n\n  const pathname = pathNoQueryHash(path);\n  return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.substr(pathname.length);\n}\n\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n  if (false) {} else {\n    return false;\n  }\n}\n\nfunction addLocale(path, locale, defaultLocale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction delLocale(path, locale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction pathNoQueryHash(path) {\n  const queryIndex = path.indexOf('?');\n  const hashIndex = path.indexOf('#');\n\n  if (queryIndex > -1 || hashIndex > -1) {\n    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n  }\n\n  return path;\n}\n\nfunction hasBasePath(path) {\n  path = pathNoQueryHash(path);\n  return path === basePath || path.startsWith(basePath + '/');\n}\n\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath);\n}\n\nfunction delBasePath(path) {\n  path = path.slice(basePath.length);\n  if (!path.startsWith('/')) path = `/${path}`;\n  return path;\n}\n\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (url.startsWith('/') || url.startsWith('#') || url.startsWith('?')) return true;\n\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = (0, _utils).getLocationOrigin();\n    const resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction interpolateAs(route, asPathname, query) {\n  let interpolatedRoute = '';\n  const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n  const dynamicGroups = dynamicRegex.groups;\n  const dynamicMatches = // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  const params = Object.keys(dynamicGroups);\n\n  if (!params.every(param => {\n    let value = dynamicMatches[param] || '';\n    const {\n      repeat,\n      optional\n    } = dynamicGroups[param]; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n\n    let replaced = `[${repeat ? '...' : ''}${param}]`;\n\n    if (optional) {\n      replaced = `${!value ? '/' : ''}[${replaced}]`;\n    }\n\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    segment => encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = '' // did not satisfy all requirements\n    ; // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params,\n    result: interpolatedRoute\n  };\n}\n\nfunction omitParmsFromQuery(query, params) {\n  const filteredQuery = {};\n  Object.keys(query).forEach(key => {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key];\n    }\n  });\n  return filteredQuery;\n}\n\nfunction resolveHref(router, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  let base;\n  let urlAsString = typeof href === 'string' ? href : (0, _utils).formatWithValidation(href); // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n\n  const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n  const urlAsStringNoProto = urlProtoMatch ? urlAsString.substr(urlProtoMatch[0].length) : urlAsString;\n  const urlParts = urlAsStringNoProto.split('?');\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n    const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;\n  } // Return because it cannot be routed by the Next.js router\n\n\n  if (!isLocalURL(urlAsString)) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n\n  try {\n    base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n');\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n    let interpolatedAs = '';\n\n    if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n      const {\n        result,\n        params\n      } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n\n      if (result) {\n        interpolatedAs = (0, _utils).formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n\n\n    const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_1) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\n\nfunction stripOrigin(url) {\n  const origin = (0, _utils).getLocationOrigin();\n  return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\n\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n  const origin = (0, _utils).getLocationOrigin();\n  const hrefHadOrigin = resolvedHref.startsWith(origin);\n  const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n  resolvedHref = stripOrigin(resolvedHref);\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n  const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n  const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n  return {\n    url: preparedUrl,\n    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n  };\n}\n\nfunction resolveDynamicRoute(pathname, pages) {\n  const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname;\n  } // handle resolving href for dynamic routes\n\n\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some(page => {\n      if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n        pathname = page;\n        return true;\n      }\n    });\n  }\n\n  return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\n\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\n\nfunction fetchRetry(url, attempts, opts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` wonâ€™t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(res => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1, opts);\n      }\n\n      if (res.status === 404) {\n        return res.json().then(data => {\n          if (data.notFound) {\n            return {\n              notFound: SSG_DATA_NOT_FOUND\n            };\n          }\n\n          throw new Error(`Failed to load static props`);\n        });\n      }\n\n      throw new Error(`Failed to load static props`);\n    }\n\n    return opts.text ? res.text() : res.json();\n  });\n}\n\nfunction fetchNextData(dataHref, isServerRender, text, inflightCache, persistCache) {\n  const {\n    href: cacheKey\n  } = new URL(dataHref, window.location.href);\n\n  if (inflightCache[cacheKey] !== undefined) {\n    return inflightCache[cacheKey];\n  }\n\n  return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1, {\n    text\n  }).catch(err => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      (0, _routeLoader).markAssetError(err);\n    }\n\n    throw err;\n  }).then(data => {\n    if (!persistCache || true) {\n      delete inflightCache[cacheKey];\n    }\n\n    return data;\n  }).catch(err => {\n    delete inflightCache[cacheKey];\n    throw err;\n  });\n}\n\nclass Router {\n  constructor(pathname, query, as, {\n    initialProps,\n    pageLoader,\n    App,\n    wrapApp,\n    Component,\n    err,\n    subscription,\n    isFallback,\n    locale,\n    locales,\n    defaultLocale,\n    domainLocales,\n    isPreview\n  }) {\n    // Static Data Cache\n    this.sdc = {}; // In-flight Server Data Requests, for deduping\n\n    this.sdr = {}; // In-flight middleware preflight requests\n\n    this.sde = {};\n    this._idx = 0;\n\n    this.onPopState = e => {\n      const state = e.state;\n\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        const {\n          pathname,\n          query\n        } = this;\n        this.changeState('replaceState', (0, _utils).formatWithValidation({\n          pathname: addBasePath(pathname),\n          query\n        }), (0, _utils).getURL());\n        return;\n      }\n\n      if (!state.__N) {\n        return;\n      }\n\n      let forcedScroll;\n      const {\n        url,\n        as,\n        options,\n        idx\n      } = state;\n\n      if (false) {}\n\n      this._idx = idx;\n      const {\n        pathname\n      } = (0, _parseRelativeUrl).parseRelativeUrl(url); // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n      if (this.isSsr && as === addBasePath(this.asPath) && pathname === addBasePath(this.pathname)) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (this._bps && !this._bps(state)) {\n        return;\n      }\n\n      this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale\n      }), forcedScroll);\n    }; // represents the current component key\n\n\n    this.route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (pathname !== '/_error') {\n      var ref;\n      this.components[this.route] = {\n        Component,\n        initial: true,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n        __N_RSC: !!((ref = Component) === null || ref === void 0 ? void 0 : ref.__next_rsc__)\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: []\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname) && self.__NEXT_DATA__.autoExport;\n\n    this.asPath = autoExportDynamic ? pathname : as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n    this.isPreview = !!isPreview;\n    this.isLocaleDomain = false;\n\n    if (false) {}\n\n    if (false) {}\n  }\n\n  reload() {\n    window.location.reload();\n  }\n  /**\n  * Go back in history\n  */\n\n\n  back() {\n    window.history.back();\n  }\n  /**\n  * Performs a `pushState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  push(url, as, options = {}) {\n    if (false) {}\n\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('pushState', url, as, options);\n  }\n  /**\n  * Performs a `replaceState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  replace(url, as, options = {}) {\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('replaceState', url, as, options);\n  }\n\n  async change(method, url, as, options, forcedScroll) {\n    if (!isLocalURL(url)) {\n      window.location.href = url;\n      return false;\n    }\n\n    const shouldResolveHref = options._h || options._shouldResolveHref || pathNoQueryHash(url) === pathNoQueryHash(as); // for static pages with query params in the URL we delay\n    // marking the router ready until after the query is updated\n\n    if (options._h) {\n      this.isReady = true;\n    }\n\n    const prevLocale = this.locale;\n\n    if (false) { var ref; }\n\n    if (!options._h) {\n      this.isSsr = false;\n    } // marking route changes as a navigation start entry\n\n\n    if (_utils.ST) {\n      performance.mark('routeChange');\n    }\n\n    const {\n      shallow = false\n    } = options;\n    const routeProps = {\n      shallow\n    };\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute, routeProps);\n    }\n\n    as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n    const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);\n    this._inFlightRoute = as;\n    let localeChange = prevLocale !== this.locale; // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n\n    if (!options._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n      this.asPath = cleanedAs;\n      Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?\n\n      this.changeState(method, url, as, options);\n      this.scrollToHash(cleanedAs);\n      this.notify(this.components[this.route], null);\n      Router.events.emit('hashChangeComplete', as, routeProps);\n      return true;\n    }\n\n    let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n    let {\n      pathname,\n      query\n    } = parsed; // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n\n    let pages, rewrites;\n\n    try {\n      [pages, {\n        __rewrites: rewrites\n      }] = await Promise.all([this.pageLoader.getPageList(), (0, _routeLoader).getClientBuildManifest(), this.pageLoader.getMiddlewareList()]);\n    } catch (err) {\n      // If we fail to resolve the page list or client-build manifest, we must\n      // do a server-side transition:\n      window.location.href = as;\n      return false;\n    } // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n\n\n    if (!this.urlIsNew(cleanedAs) && !localeChange) {\n      method = 'replaceState';\n    } // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n\n\n    let resolvedAs = as; // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n\n    pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n\n    if (shouldResolveHref && pathname !== '/_error') {\n      options._shouldResolveHref = true;\n\n      if (false) {} else {\n        parsed.pathname = resolveDynamicRoute(pathname, pages);\n\n        if (parsed.pathname !== pathname) {\n          pathname = parsed.pathname;\n          parsed.pathname = addBasePath(pathname);\n          url = (0, _utils).formatWithValidation(parsed);\n        }\n      }\n    }\n\n    if (!isLocalURL(as)) {\n      if (true) {\n        throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n      }\n\n      window.location.href = as;\n      return false;\n    }\n\n    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n    /**\n    * If the route update was triggered for client-side hydration and\n    * the rendered route is not dynamic do not check the preflight\n    * request as it is not necessary.\n    */\n\n    if (options._h !== 1 || (0, _isDynamic).isDynamicRoute((0, _normalizeTrailingSlash).removePathTrailingSlash(pathname))) {\n      const effect = await this._preflightRequest({\n        as,\n        cache: false,\n        pages,\n        pathname,\n        query\n      });\n\n      if (effect.type === 'rewrite') {\n        query = _objectSpread(_objectSpread({}, query), effect.parsedAs.query);\n        resolvedAs = effect.asPath;\n        pathname = effect.resolvedHref;\n        parsed.pathname = effect.resolvedHref;\n        url = (0, _utils).formatWithValidation(parsed);\n      } else if (effect.type === 'redirect' && effect.newAs) {\n        return this.change(method, effect.newUrl, effect.newAs, options);\n      } else if (effect.type === 'redirect' && effect.destination) {\n        window.location.href = effect.destination;\n        return new Promise(() => {});\n      } else if (effect.type === 'refresh' && as !== window.location.pathname) {\n        window.location.href = as;\n        return new Promise(() => {});\n      }\n    }\n\n    const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n\n    if ((0, _isDynamic).isDynamicRoute(route)) {\n      const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n      const asPathname = parsedAs.pathname;\n      const routeRegex = (0, _routeRegex).getRouteRegex(route);\n      const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n      const shouldInterpolate = route === asPathname;\n      const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n\n      if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n        const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);\n\n        if (missingParams.length > 0) {\n          if (true) {\n            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n          }\n\n          throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);\n        }\n      } else if (shouldInterpolate) {\n        as = (0, _utils).formatWithValidation(Object.assign({}, parsedAs, {\n          pathname: interpolatedAs.result,\n          query: omitParmsFromQuery(query, interpolatedAs.params)\n        }));\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch);\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as, routeProps);\n\n    try {\n      var ref, ref1;\n      let routeInfo = await this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps);\n      let {\n        error,\n        props,\n        __N_SSG,\n        __N_SSP\n      } = routeInfo; // handle redirect on client-transition\n\n      if ((__N_SSG || __N_SSP) && props) {\n        if (props.pageProps && props.pageProps.__N_REDIRECT) {\n          const destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n          // client-navigation if it is falling back to hard navigation if\n          // it's not\n\n          if (destination.startsWith('/') && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n            const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n            parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n            const {\n              url: newUrl,\n              as: newAs\n            } = prepareUrlAs(this, destination, destination);\n            return this.change(method, newUrl, newAs, options);\n          }\n\n          window.location.href = destination;\n          return new Promise(() => {});\n        }\n\n        this.isPreview = !!props.__N_PREVIEW; // handle SSG data 404\n\n        if (props.notFound === SSG_DATA_NOT_FOUND) {\n          let notFoundRoute;\n\n          try {\n            await this.fetchComponent('/404');\n            notFoundRoute = '/404';\n          } catch (_) {\n            notFoundRoute = '/_error';\n          }\n\n          routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n            shallow: false\n          });\n        }\n      }\n\n      Router.events.emit('beforeHistoryChange', as, routeProps);\n      this.changeState(method, url, as, options);\n\n      if (options._h && pathname === '/_error' && ((ref = self.__NEXT_DATA__.props) === null || ref === void 0 ? void 0 : (ref1 = ref.pageProps) === null || ref1 === void 0 ? void 0 : ref1.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n        // ensure statusCode is still correct for static 500 page\n        // when updating query information\n        props.pageProps.statusCode = 500;\n      } // shallow routing is only allowed for same page URL changes.\n\n\n      const isValidShallowRoute = options.shallow && this.route === route;\n\n      var _scroll;\n\n      const shouldScroll = (_scroll = options.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n      const resetScroll = shouldScroll ? {\n        x: 0,\n        y: 0\n      } : null;\n      await this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch(e => {\n        if (e.cancelled) error = error || e;else throw e;\n      });\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n        throw error;\n      }\n\n      if (false) {}\n\n      Router.events.emit('routeChangeComplete', as, routeProps);\n      return true;\n    } catch (err1) {\n      if ((0, _isError).default(err1) && err1.cancelled) {\n        return false;\n      }\n\n      throw err1;\n    }\n  }\n\n  changeState(method, url, as, options = {}) {\n    if (true) {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`);\n        return;\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`);\n        return;\n      }\n    }\n\n    if (method !== 'pushState' || (0, _utils).getURL() !== as) {\n      this._shallow = options.shallow;\n      window.history[method]({\n        url,\n        as,\n        options,\n        __N: true,\n        idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1\n      }, // Most browsers currently ignores this parameter, although they may use it in the future.\n      // Passing the empty string here should be safe against future changes to the method.\n      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n      '', as);\n    }\n  }\n\n  async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err;\n    }\n\n    if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n      // So, doing a hard reload is the proper way to deal with this.\n\n      window.location.href = as; // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n\n      throw buildCancellationError();\n    }\n\n    try {\n      let Component;\n      let styleSheets;\n      let props;\n\n      if (typeof Component === 'undefined' || typeof styleSheets === 'undefined') {\n        ({\n          page: Component,\n          styleSheets\n        } = await this.fetchComponent('/_error'));\n      }\n\n      const routeInfo = {\n        props,\n        Component,\n        styleSheets,\n        err,\n        error: err\n      };\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query\n          });\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr);\n          routeInfo.props = {};\n        }\n      }\n\n      return routeInfo;\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as, routeProps, true);\n    }\n  }\n\n  async getRouteInfo(route, pathname, query, as, resolvedAs, routeProps) {\n    try {\n      const existingRouteInfo = this.components[route];\n\n      if (routeProps.shallow && existingRouteInfo && this.route === route) {\n        return existingRouteInfo;\n      }\n\n      let cachedRouteInfo = undefined; // can only use non-initial route info\n      // cannot reuse route info in development since it can change after HMR\n\n      if (false) {}\n\n      const routeInfo = cachedRouteInfo || (await this.fetchComponent(route).then(res => ({\n        Component: res.page,\n        styleSheets: res.styleSheets,\n        __N_SSG: res.mod.__N_SSG,\n        __N_SSP: res.mod.__N_SSP,\n        __N_RSC: !!res.page.__next_rsc__\n      })));\n      const {\n        Component,\n        __N_SSG,\n        __N_SSP,\n        __N_RSC\n      } = routeInfo;\n\n      if (true) {\n        const {\n          isValidElementType\n        } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n\n        if (!isValidElementType(Component)) {\n          throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n        }\n      }\n\n      let dataHref;\n\n      if (__N_SSG || __N_SSP || __N_RSC) {\n        dataHref = this.pageLoader.getDataHref({\n          href: (0, _utils).formatWithValidation({\n            pathname,\n            query\n          }),\n          asPath: resolvedAs,\n          ssg: __N_SSG,\n          rsc: __N_RSC,\n          locale: this.locale\n        });\n      }\n\n      const props = await this._getData(() => __N_SSG || __N_SSP ? fetchNextData(dataHref, this.isSsr, false, __N_SSG ? this.sdc : this.sdr, !!__N_SSG && !this.isPreview) : this.getInitialProps(Component, // we provide AppTree later so this needs to be `any`\n      {\n        pathname,\n        query,\n        asPath: as,\n        locale: this.locale,\n        locales: this.locales,\n        defaultLocale: this.defaultLocale\n      }));\n\n      if (__N_RSC) {\n        const {\n          fresh,\n          data\n        } = await this._getData(() => this._getFlightData(dataHref));\n        props.pageProps = Object.assign(props.pageProps, {\n          __flight_serialized__: data,\n          __flight_fresh__: fresh\n        });\n      }\n\n      routeInfo.props = props;\n      this.components[route] = routeInfo;\n      return routeInfo;\n    } catch (err) {\n      return this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n    }\n  }\n\n  set(route, pathname, query, as, data, resetScroll) {\n    this.isFallback = false;\n    this.route = route;\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    return this.notify(data, resetScroll);\n  }\n  /**\n  * Callback to execute before replacing router state\n  * @param cb callback to be executed\n  */\n\n\n  beforePopState(cb) {\n    this._bps = cb;\n  }\n\n  onlyAHashChange(as) {\n    if (!this.asPath) return false;\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same\n\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true;\n    } // If the urls are change, there's more than a hash change\n\n\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false;\n    } // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n\n\n    return oldHash !== newHash;\n  }\n\n  scrollToHash(as) {\n    const [, hash = ''] = as.split('#'); // Scroll to top if the hash is just `#` with no value or `#top`\n    // To mirror browsers\n\n    if (hash === '' || hash === 'top') {\n      window.scrollTo(0, 0);\n      return;\n    } // First we check if the element by id is found\n\n\n    const idEl = document.getElementById(hash);\n\n    if (idEl) {\n      idEl.scrollIntoView();\n      return;\n    } // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n\n\n    const nameEl = document.getElementsByName(hash)[0];\n\n    if (nameEl) {\n      nameEl.scrollIntoView();\n    }\n  }\n\n  urlIsNew(asPath) {\n    return this.asPath !== asPath;\n  }\n  /**\n  * Prefetch page code, you may wait for the data during page rendering.\n  * This feature only works in production!\n  * @param url the href of prefetched page\n  * @param asPath the as path of the prefetched page\n  */\n\n\n  async prefetch(url, asPath = url, options = {}) {\n    let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n    let {\n      pathname,\n      query\n    } = parsed;\n\n    if (false) {}\n\n    const pages = await this.pageLoader.getPageList();\n    let resolvedAs = asPath;\n\n    if (false) {} else {\n      parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n\n      if (parsed.pathname !== pathname) {\n        pathname = parsed.pathname;\n        parsed.pathname = pathname;\n        url = (0, _utils).formatWithValidation(parsed);\n      }\n    } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n\n\n    if (true) {\n      return;\n    }\n\n    const effects = await this._preflightRequest({\n      as: addBasePath(asPath),\n      cache: true,\n      pages,\n      pathname,\n      query\n    });\n\n    if (effects.type === 'rewrite') {\n      parsed.pathname = effects.resolvedHref;\n      pathname = effects.resolvedHref;\n      query = _objectSpread(_objectSpread({}, query), effects.parsedAs.query);\n      resolvedAs = effects.asPath;\n      url = (0, _utils).formatWithValidation(parsed);\n    }\n\n    const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n    await Promise.all([this.pageLoader._isSsg(route).then(isSsg => {\n      return isSsg ? fetchNextData(this.pageLoader.getDataHref({\n        href: url,\n        asPath: resolvedAs,\n        ssg: true,\n        locale: typeof options.locale !== 'undefined' ? options.locale : this.locale\n      }), false, false, this.sdc, true) : false;\n    }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n  }\n\n  async fetchComponent(route) {\n    let cancelled = false;\n\n    const cancel = this.clc = () => {\n      cancelled = true;\n    };\n\n    const handleCancelled = () => {\n      if (cancelled) {\n        const error = new Error(`Abort fetching component for route: \"${route}\"`);\n        error.cancelled = true;\n        throw error;\n      }\n\n      if (cancel === this.clc) {\n        this.clc = null;\n      }\n    };\n\n    try {\n      const componentResult = await this.pageLoader.loadPage(route);\n      handleCancelled();\n      return componentResult;\n    } catch (err) {\n      handleCancelled();\n      throw err;\n    }\n  }\n\n  _getData(fn) {\n    let cancelled = false;\n\n    const cancel = () => {\n      cancelled = true;\n    };\n\n    this.clc = cancel;\n    return fn().then(data => {\n      if (cancel === this.clc) {\n        this.clc = null;\n      }\n\n      if (cancelled) {\n        const err = new Error('Loading initial props cancelled');\n        err.cancelled = true;\n        throw err;\n      }\n\n      return data;\n    });\n  }\n\n  _getFlightData(dataHref) {\n    // Do not cache RSC flight response since it's not a static resource\n    return fetchNextData(dataHref, true, true, this.sdc, false).then(serialized => {\n      return {\n        fresh: true,\n        data: serialized\n      };\n    });\n  }\n\n  async _preflightRequest(options) {\n    var ref;\n    const cleanedAs = delLocale(hasBasePath(options.as) ? delBasePath(options.as) : options.as, this.locale);\n    const fns = await this.pageLoader.getMiddlewareList();\n    const requiresPreflight = fns.some(([middleware, isSSR]) => {\n      return (0, _routeMatcher).getRouteMatcher((0, _getMiddlewareRegex).getMiddlewareRegex(middleware, !isSSR))(cleanedAs);\n    });\n\n    if (!requiresPreflight) {\n      return {\n        type: 'next'\n      };\n    }\n\n    const preflight = await this._getPreflightData({\n      preflightHref: options.as,\n      shouldCache: options.cache\n    });\n\n    if ((ref = preflight.rewrite) === null || ref === void 0 ? void 0 : ref.startsWith('/')) {\n      const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n      const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n      let matchedPage;\n      let resolvedHref;\n\n      if (options.pages.includes(fsPathname)) {\n        matchedPage = true;\n        resolvedHref = fsPathname;\n      } else {\n        resolvedHref = resolveDynamicRoute(fsPathname, options.pages);\n\n        if (resolvedHref !== parsed.pathname && options.pages.includes(resolvedHref)) {\n          matchedPage = true;\n        }\n      }\n\n      return {\n        type: 'rewrite',\n        asPath: parsed.pathname,\n        parsedAs: parsed,\n        matchedPage,\n        resolvedHref\n      };\n    }\n\n    if (preflight.redirect) {\n      if (preflight.redirect.startsWith('/')) {\n        const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n        const {\n          url: newUrl,\n          as: newAs\n        } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n        return {\n          type: 'redirect',\n          newUrl,\n          newAs\n        };\n      }\n\n      return {\n        type: 'redirect',\n        destination: preflight.redirect\n      };\n    } // For SSR requests, they will be handled like normal pages.\n\n\n    if (preflight.refresh && !preflight.ssr) {\n      return {\n        type: 'refresh'\n      };\n    }\n\n    return {\n      type: 'next'\n    };\n  }\n\n  _getPreflightData(params) {\n    const {\n      preflightHref,\n      shouldCache = false\n    } = params;\n    const {\n      href: cacheKey\n    } = new URL(preflightHref, window.location.href);\n\n    if (false) {}\n\n    return fetch(preflightHref, {\n      method: 'HEAD',\n      credentials: 'same-origin',\n      headers: {\n        'x-middleware-preflight': '1'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to preflight request`);\n      }\n\n      return {\n        cache: res.headers.get('x-middleware-cache'),\n        redirect: res.headers.get('Location'),\n        refresh: res.headers.has('x-middleware-refresh'),\n        rewrite: res.headers.get('x-middleware-rewrite'),\n        ssr: !!res.headers.get('x-middleware-ssr')\n      };\n    }).then(data => {\n      if (shouldCache && data.cache !== 'no-cache') {\n        this.sde[cacheKey] = data;\n      }\n\n      return data;\n    }).catch(err => {\n      delete this.sde[cacheKey];\n      throw err;\n    });\n  }\n\n  getInitialProps(Component, ctx) {\n    const {\n      Component: App\n    } = this.components['/_app'];\n\n    const AppTree = this._wrapApp(App);\n\n    ctx.AppTree = AppTree;\n    return (0, _utils).loadGetInitialProps(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx\n    });\n  }\n\n  abortComponentLoad(as, routeProps) {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);\n      this.clc();\n      this.clc = null;\n    }\n  }\n\n  notify(data, resetScroll) {\n    return this.sub(data, this.components['/_app'].Component, resetScroll);\n  }\n\n}\n\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./src/components/footer/footer.js":
/*!*****************************************!*\
  !*** ./src/components/footer/footer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Footer)\n/* harmony export */ });\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../link */ \"./src/components/link.js\");\n/* harmony import */ var _data_footer_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/footer.data */ \"./src/data/footer.data.js\");\n/* harmony import */ var _assets_Club_logo_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../assets/Club_logo.png */ \"./src/assets/Club_logo.png\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @theme-ui/core/jsx-dev-runtime */ \"@theme-ui/core/jsx-dev-runtime\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\footer\\\\footer.js\";\n\n/** @jsxImportSource @theme-ui/core */\n\n\n\n\n\nfunction Footer() {\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(\"footer\", {\n    sx: styles.footer,\n    children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Container, {\n      children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Box, {\n        sx: styles.footer.footerBottomArea,\n        children: [(0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_link__WEBPACK_IMPORTED_MODULE_1__.Link, {\n          path: \"/\",\n          children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Image, {\n            src: _assets_Club_logo_png__WEBPACK_IMPORTED_MODULE_3__[\"default\"].src,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Box, {\n          sx: styles.footer,\n          children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(\"nav\", {\n            children: _data_footer_data__WEBPACK_IMPORTED_MODULE_2__[\"default\"].map((item, i) => (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_link__WEBPACK_IMPORTED_MODULE_1__.Link, {\n              path: item.path,\n              label: item.label,\n              sx: styles.footer.link\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Text, {\n          sx: styles.footer.copyright,\n          children: [\"Copyright by \", new Date().getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nconst styles = {\n  footer: {\n    footerBottomArea: {\n      borderTop: \"1px solid\",\n      borderTopColor: \"border_color\",\n      display: \"flex\",\n      pt: [7, null, 8],\n      pb: [\"40px\", null, \"100px\"],\n      textAlign: \"center\",\n      flexDirection: \"column\"\n    },\n    menus: {\n      mt: [3, 4],\n      mb: 2,\n      nav: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\"\n      }\n    },\n    link: {\n      fontSize: [1, \"15px\"],\n      color: \"text\",\n      fontWeight: \"400\",\n      mb: 2,\n      cursor: \"pointer\",\n      transition: \"all 0.35s\",\n      display: \"block\",\n      textDecoration: \"none\",\n      lineHeight: [1.5, null, 1.8],\n      px: [2, null, 4],\n      \":hover\": {\n        color: \"primary\"\n      }\n    },\n    copyright: {\n      fontSize: [1, \"15px\"],\n      width: \"100%\"\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLFNBQVNRLE1BQVQsR0FBa0I7QUFDL0IsU0FDRTtBQUFRLE1BQUUsRUFBRUMsTUFBTSxDQUFDQyxNQUFuQjtBQUFBLGNBQ0UsdUVBQUMsK0NBQUQ7QUFBQSxnQkFDRSx1RUFBQyx5Q0FBRDtBQUFLLFVBQUUsRUFBRUQsTUFBTSxDQUFDQyxNQUFQLENBQWNDLGdCQUF2QjtBQUFBLG1CQUNFLHVFQUFDLHVDQUFEO0FBQU0sY0FBSSxFQUFDLEdBQVg7QUFBQSxvQkFDRSx1RUFBQywyQ0FBRDtBQUFPLGVBQUcsRUFBRUosaUVBQVo7QUFBNEIsZUFBRyxFQUFDO0FBQWhDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQURGLEVBSUUsdUVBQUMseUNBQUQ7QUFBSyxZQUFFLEVBQUVFLE1BQU0sQ0FBQ0MsTUFBaEI7QUFBQSxvQkFDRTtBQUFBLHNCQUNHSiw2REFBQSxDQUFjLENBQUNRLElBQUQsRUFBT0MsQ0FBUCxLQUNiLHVFQUFDLHVDQUFEO0FBQ0Usa0JBQUksRUFBRUQsSUFBSSxDQUFDRSxJQURiO0FBR0UsbUJBQUssRUFBRUYsSUFBSSxDQUFDRyxLQUhkO0FBSUUsZ0JBQUUsRUFBRVIsTUFBTSxDQUFDQyxNQUFQLENBQWNRO0FBSnBCLGVBRU9ILENBRlA7QUFBQTtBQUFBO0FBQUE7QUFBQSxvQkFERDtBQURIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQUpGLEVBZ0JFLHVFQUFDLDBDQUFEO0FBQU0sWUFBRSxFQUFFTixNQUFNLENBQUNDLE1BQVAsQ0FBY1MsU0FBeEI7QUFBQSxzQ0FDZ0IsSUFBSUMsSUFBSixHQUFXQyxXQUFYLEVBRGhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFoQkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFERjtBQTBCRDtBQUVELE1BQU1aLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFDaEJXLE1BQUFBLFNBQVMsRUFBRSxXQURLO0FBRWhCQyxNQUFBQSxjQUFjLEVBQUUsY0FGQTtBQUdoQkMsTUFBQUEsT0FBTyxFQUFFLE1BSE87QUFJaEJDLE1BQUFBLEVBQUUsRUFBRSxDQUFDLENBQUQsRUFBSSxJQUFKLEVBQVUsQ0FBVixDQUpZO0FBS2hCQyxNQUFBQSxFQUFFLEVBQUUsQ0FBQyxNQUFELEVBQVMsSUFBVCxFQUFlLE9BQWYsQ0FMWTtBQU1oQkMsTUFBQUEsU0FBUyxFQUFFLFFBTks7QUFPaEJDLE1BQUFBLGFBQWEsRUFBRTtBQVBDLEtBRFo7QUFVTkMsSUFBQUEsS0FBSyxFQUFFO0FBQ0xDLE1BQUFBLEVBQUUsRUFBRSxDQUFDLENBQUQsRUFBSSxDQUFKLENBREM7QUFFTEMsTUFBQUEsRUFBRSxFQUFFLENBRkM7QUFHTEMsTUFBQUEsR0FBRyxFQUFFO0FBQ0hSLFFBQUFBLE9BQU8sRUFBRSxNQUROO0FBRUhTLFFBQUFBLFVBQVUsRUFBRSxRQUZUO0FBR0hDLFFBQUFBLGNBQWMsRUFBRSxRQUhiO0FBSUhDLFFBQUFBLFFBQVEsRUFBRTtBQUpQO0FBSEEsS0FWRDtBQXFCTmpCLElBQUFBLElBQUksRUFBRTtBQUNKa0IsTUFBQUEsUUFBUSxFQUFFLENBQUMsQ0FBRCxFQUFJLE1BQUosQ0FETjtBQUVKQyxNQUFBQSxLQUFLLEVBQUUsTUFGSDtBQUdKQyxNQUFBQSxVQUFVLEVBQUUsS0FIUjtBQUlKUCxNQUFBQSxFQUFFLEVBQUUsQ0FKQTtBQUtKUSxNQUFBQSxNQUFNLEVBQUUsU0FMSjtBQU1KQyxNQUFBQSxVQUFVLEVBQUUsV0FOUjtBQU9KaEIsTUFBQUEsT0FBTyxFQUFFLE9BUEw7QUFRSmlCLE1BQUFBLGNBQWMsRUFBRSxNQVJaO0FBU0pDLE1BQUFBLFVBQVUsRUFBRSxDQUFDLEdBQUQsRUFBTSxJQUFOLEVBQVksR0FBWixDQVRSO0FBVUpDLE1BQUFBLEVBQUUsRUFBRSxDQUFDLENBQUQsRUFBSSxJQUFKLEVBQVUsQ0FBVixDQVZBO0FBV0osZ0JBQVU7QUFDUk4sUUFBQUEsS0FBSyxFQUFFO0FBREM7QUFYTixLQXJCQTtBQW9DTmxCLElBQUFBLFNBQVMsRUFBRTtBQUNUaUIsTUFBQUEsUUFBUSxFQUFFLENBQUMsQ0FBRCxFQUFJLE1BQUosQ0FERDtBQUVUUSxNQUFBQSxLQUFLLEVBQUU7QUFGRTtBQXBDTDtBQURLLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbHViLWZyb250ZW5kLy4vc3JjL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5qcz9kNjUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4SW1wb3J0U291cmNlIEB0aGVtZS11aS9jb3JlICovXG5pbXBvcnQgeyBqc3gsIEJveCwgQ29udGFpbmVyLCBJbWFnZSwgVGV4dCB9IGZyb20gXCJ0aGVtZS11aVwiO1xuaW1wb3J0IHsgTGluayB9IGZyb20gXCIuLi9saW5rXCI7XG5pbXBvcnQgbWVudUl0ZW1zIGZyb20gXCIuLi8uLi9kYXRhL2Zvb3Rlci5kYXRhXCI7XG5pbXBvcnQgRm9vdGVyTG9nbyBmcm9tIFwiLi4vLi4vYXNzZXRzL0NsdWJfbG9nby5wbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRm9vdGVyKCkge1xuICByZXR1cm4gKFxuICAgIDxmb290ZXIgc3g9e3N0eWxlcy5mb290ZXJ9PlxuICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgPEJveCBzeD17c3R5bGVzLmZvb3Rlci5mb290ZXJCb3R0b21BcmVhfT5cbiAgICAgICAgICA8TGluayBwYXRoPVwiL1wiPlxuICAgICAgICAgICAgPEltYWdlIHNyYz17Rm9vdGVyTG9nby5zcmN9IGFsdD1cImxvZ29cIiAvPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8Qm94IHN4PXtzdHlsZXMuZm9vdGVyfT5cbiAgICAgICAgICAgIDxuYXY+XG4gICAgICAgICAgICAgIHttZW51SXRlbXMubWFwKChpdGVtLCBpKSA9PiAoXG4gICAgICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAgICAgIHBhdGg9e2l0ZW0ucGF0aH1cbiAgICAgICAgICAgICAgICAgIGtleT17aX1cbiAgICAgICAgICAgICAgICAgIGxhYmVsPXtpdGVtLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgc3g9e3N0eWxlcy5mb290ZXIubGlua31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvbmF2PlxuICAgICAgICAgIDwvQm94PlxuICAgICAgICAgIDxUZXh0IHN4PXtzdHlsZXMuZm9vdGVyLmNvcHlyaWdodH0+XG4gICAgICAgICAgICBDb3B5cmlnaHQgYnkge25ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKX1cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvQm94PlxuICAgICAgPC9Db250YWluZXI+XG4gICAgPC9mb290ZXI+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgZm9vdGVyOiB7XG4gICAgZm9vdGVyQm90dG9tQXJlYToge1xuICAgICAgYm9yZGVyVG9wOiBcIjFweCBzb2xpZFwiLFxuICAgICAgYm9yZGVyVG9wQ29sb3I6IFwiYm9yZGVyX2NvbG9yXCIsXG4gICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgIHB0OiBbNywgbnVsbCwgOF0sXG4gICAgICBwYjogW1wiNDBweFwiLCBudWxsLCBcIjEwMHB4XCJdLFxuICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICB9LFxuICAgIG1lbnVzOiB7XG4gICAgICBtdDogWzMsIDRdLFxuICAgICAgbWI6IDIsXG4gICAgICBuYXY6IHtcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICBmbGV4V3JhcDogXCJ3cmFwXCIsXG4gICAgICB9LFxuICAgIH0sXG5cbiAgICBsaW5rOiB7XG4gICAgICBmb250U2l6ZTogWzEsIFwiMTVweFwiXSxcbiAgICAgIGNvbG9yOiBcInRleHRcIixcbiAgICAgIGZvbnRXZWlnaHQ6IFwiNDAwXCIsXG4gICAgICBtYjogMixcbiAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgICB0cmFuc2l0aW9uOiBcImFsbCAwLjM1c1wiLFxuICAgICAgZGlzcGxheTogXCJibG9ja1wiLFxuICAgICAgdGV4dERlY29yYXRpb246IFwibm9uZVwiLFxuICAgICAgbGluZUhlaWdodDogWzEuNSwgbnVsbCwgMS44XSxcbiAgICAgIHB4OiBbMiwgbnVsbCwgNF0sXG4gICAgICBcIjpob3ZlclwiOiB7XG4gICAgICAgIGNvbG9yOiBcInByaW1hcnlcIixcbiAgICAgIH0sXG4gICAgfSxcbiAgICBjb3B5cmlnaHQ6IHtcbiAgICAgIGZvbnRTaXplOiBbMSwgXCIxNXB4XCJdLFxuICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIH0sXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbImpzeCIsIkJveCIsIkNvbnRhaW5lciIsIkltYWdlIiwiVGV4dCIsIkxpbmsiLCJtZW51SXRlbXMiLCJGb290ZXJMb2dvIiwiRm9vdGVyIiwic3R5bGVzIiwiZm9vdGVyIiwiZm9vdGVyQm90dG9tQXJlYSIsInNyYyIsIm1hcCIsIml0ZW0iLCJpIiwicGF0aCIsImxhYmVsIiwibGluayIsImNvcHlyaWdodCIsIkRhdGUiLCJnZXRGdWxsWWVhciIsImJvcmRlclRvcCIsImJvcmRlclRvcENvbG9yIiwiZGlzcGxheSIsInB0IiwicGIiLCJ0ZXh0QWxpZ24iLCJmbGV4RGlyZWN0aW9uIiwibWVudXMiLCJtdCIsIm1iIiwibmF2IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleFdyYXAiLCJmb250U2l6ZSIsImNvbG9yIiwiZm9udFdlaWdodCIsImN1cnNvciIsInRyYW5zaXRpb24iLCJ0ZXh0RGVjb3JhdGlvbiIsImxpbmVIZWlnaHQiLCJweCIsIndpZHRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/footer/footer.js\n");

/***/ }),

/***/ "./src/components/header/header.js":
/*!*****************************************!*\
  !*** ./src/components/header/header.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Header)\n/* harmony export */ });\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react */ \"@emotion/react\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_emotion_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _logo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../logo */ \"./src/components/logo.js\");\n/* harmony import */ var _assets_Club_logo_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../assets/Club_logo.png */ \"./src/assets/Club_logo.png\");\n/* harmony import */ var _mobile_drawer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mobile-drawer */ \"./src/components/header/mobile-drawer.js\");\n/* harmony import */ var _data_header_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data/header.data */ \"./src/data/header.data.js\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @theme-ui/core/jsx-dev-runtime */ \"@theme-ui/core/jsx-dev-runtime\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\header\\\\header.js\";\n\n/** @jsxImportSource @theme-ui/core */\n\n\n\n\n\n\n\n\nfunction Header({\n  className,\n  isOpen,\n  setIsOpen\n}) {\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(\"header\", {\n    sx: styles.header,\n    className: className,\n    children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Container, {\n      sx: styles.container,\n      children: [(0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(_logo__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        src: _assets_Club_logo_png__WEBPACK_IMPORTED_MODULE_4__[\"default\"].src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Flex, {\n        as: \"nav\",\n        sx: styles.nav,\n        children: _data_header_data__WEBPACK_IMPORTED_MODULE_6__[\"default\"].map((menuItem, index) => (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n          activeClass: \"active\",\n          href: menuItem.path,\n          spy: true,\n          smooth: true,\n          offset: -70,\n          duration: 500,\n          children: menuItem.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Button, {\n        className: \"donate__btn\",\n        variant: \"secondary\",\n        \"aria-label\": \"Get Started\",\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxDEV)(_mobile_drawer__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        isDrawerOpen: isOpen,\n        setIsDrawerOpen: setIsOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\nconst positionAnim = _emotion_react__WEBPACK_IMPORTED_MODULE_1__.keyframes`\n  from {\n    position: fixed;\n    opacity: 1;\n  }\n\n  to {\n    position: absolute;\n    opacity: 1;\n    transition: all 0.4s ease;\n  }\n`;\nconst styles = {\n  header: {\n    color: \"text\",\n    fontWeight: \"body\",\n    py: 4,\n    width: \"100%\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    backgroundColor: \"transparent\",\n    transition: \"all 0.4s ease\",\n    animation: `${positionAnim} 0.4s ease`,\n    \".donate__btn\": {\n      flexShrink: 0,\n      mr: [15, 20, null, null, 0],\n      ml: [\"auto\", null, null, null, 0]\n    },\n    \"&.sticky\": {\n      position: \"fixed\",\n      backgroundColor: \"background\",\n      color: \"#000000\",\n      boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.06)\",\n      py: 3,\n      \"nev > a\": {\n        color: \"text\"\n      }\n    }\n  },\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  nav: {\n    mx: \"auto\",\n    display: \"none\",\n    \"@media screen and (min-width: 1024px)\": {\n      display: \"block\"\n    },\n    a: {\n      fontSize: 2,\n      fontWeight: \"body\",\n      px: 5,\n      cursor: \"pointer\",\n      lineHeight: \"1.2\",\n      transition: \"all 0.15s\",\n      \"&:hover\": {\n        color: \"secondary\"\n      },\n      \"&.active\": {\n        color: \"secondary\"\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsU0FBU1MsTUFBVCxDQUFnQjtBQUFFQyxFQUFBQSxTQUFGO0FBQWFDLEVBQUFBLE1BQWI7QUFBcUJDLEVBQUFBO0FBQXJCLENBQWhCLEVBQWtEO0FBQy9ELFNBQ0U7QUFBUSxNQUFFLEVBQUVDLE1BQU0sQ0FBQ0MsTUFBbkI7QUFBMkIsYUFBUyxFQUFFSixTQUF0QztBQUFBLGNBQ0UsdUVBQUMsK0NBQUQ7QUFBVyxRQUFFLEVBQUVHLE1BQU0sQ0FBQ0UsU0FBdEI7QUFBQSxpQkFDRSx1RUFBQyw2Q0FBRDtBQUFNLFdBQUcsRUFBRVQsaUVBQVlVO0FBQXZCO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FERixFQUdFLHVFQUFDLDBDQUFEO0FBQU0sVUFBRSxFQUFDLEtBQVQ7QUFBZSxVQUFFLEVBQUVILE1BQU0sQ0FBQ0ksR0FBMUI7QUFBQSxrQkFDR1QsNkRBQUEsQ0FBYyxDQUFDVyxRQUFELEVBQVdDLEtBQVgsS0FDYix1RUFBQyxrREFBRDtBQUNFLHFCQUFXLEVBQUMsUUFEZDtBQUVFLGNBQUksRUFBRUQsUUFBUSxDQUFDRSxJQUZqQjtBQUdFLGFBQUcsRUFBRSxJQUhQO0FBSUUsZ0JBQU0sRUFBRSxJQUpWO0FBS0UsZ0JBQU0sRUFBRSxDQUFDLEVBTFg7QUFNRSxrQkFBUSxFQUFFLEdBTlo7QUFBQSxvQkFTR0YsUUFBUSxDQUFDRztBQVRaLFdBT09GLEtBUFA7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFERDtBQURIO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FIRixFQWtCRSx1RUFBQyw0Q0FBRDtBQUNFLGlCQUFTLEVBQUMsYUFEWjtBQUVFLGVBQU8sRUFBQyxXQUZWO0FBR0Usc0JBQVcsYUFIYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQWxCRixFQTBCRSx1RUFBQyxzREFBRDtBQUFjLG9CQUFZLEVBQUVULE1BQTVCO0FBQW9DLHVCQUFlLEVBQUVDO0FBQXJEO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0ExQkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBZ0NEO0FBRUQsTUFBTVcsWUFBWSxHQUFHcEIscURBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQVhBO0FBYUEsTUFBTVUsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLE1BQU0sRUFBRTtBQUNOVSxJQUFBQSxLQUFLLEVBQUUsTUFERDtBQUVOQyxJQUFBQSxVQUFVLEVBQUUsTUFGTjtBQUdOQyxJQUFBQSxFQUFFLEVBQUUsQ0FIRTtBQUlOQyxJQUFBQSxLQUFLLEVBQUUsTUFKRDtBQUtOQyxJQUFBQSxRQUFRLEVBQUUsVUFMSjtBQU1OQyxJQUFBQSxHQUFHLEVBQUUsQ0FOQztBQU9OQyxJQUFBQSxJQUFJLEVBQUUsQ0FQQTtBQVFOQyxJQUFBQSxlQUFlLEVBQUUsYUFSWDtBQVNOQyxJQUFBQSxVQUFVLEVBQUUsZUFUTjtBQVVOQyxJQUFBQSxTQUFTLEVBQUcsR0FBRVYsWUFBYSxZQVZyQjtBQVdOLG9CQUFnQjtBQUNkVyxNQUFBQSxVQUFVLEVBQUUsQ0FERTtBQUVkQyxNQUFBQSxFQUFFLEVBQUUsQ0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLElBQVQsRUFBZSxJQUFmLEVBQXFCLENBQXJCLENBRlU7QUFHZEMsTUFBQUEsRUFBRSxFQUFFLENBQUMsTUFBRCxFQUFTLElBQVQsRUFBZSxJQUFmLEVBQXFCLElBQXJCLEVBQTJCLENBQTNCO0FBSFUsS0FYVjtBQWdCTixnQkFBWTtBQUNWUixNQUFBQSxRQUFRLEVBQUUsT0FEQTtBQUVWRyxNQUFBQSxlQUFlLEVBQUUsWUFGUDtBQUdWUCxNQUFBQSxLQUFLLEVBQUUsU0FIRztBQUlWYSxNQUFBQSxTQUFTLEVBQUUsK0JBSkQ7QUFLVlgsTUFBQUEsRUFBRSxFQUFFLENBTE07QUFNVixpQkFBVztBQUNURixRQUFBQSxLQUFLLEVBQUU7QUFERTtBQU5EO0FBaEJOLEdBREs7QUE0QmJULEVBQUFBLFNBQVMsRUFBRTtBQUNUdUIsSUFBQUEsT0FBTyxFQUFFLE1BREE7QUFFVEMsSUFBQUEsVUFBVSxFQUFFLFFBRkg7QUFHVEMsSUFBQUEsY0FBYyxFQUFFO0FBSFAsR0E1QkU7QUFpQ2J2QixFQUFBQSxHQUFHLEVBQUU7QUFDSHdCLElBQUFBLEVBQUUsRUFBRSxNQUREO0FBRUhILElBQUFBLE9BQU8sRUFBRSxNQUZOO0FBR0gsNkNBQXlDO0FBQ3ZDQSxNQUFBQSxPQUFPLEVBQUU7QUFEOEIsS0FIdEM7QUFNSEksSUFBQUEsQ0FBQyxFQUFFO0FBQ0RDLE1BQUFBLFFBQVEsRUFBRSxDQURUO0FBRURsQixNQUFBQSxVQUFVLEVBQUUsTUFGWDtBQUdEbUIsTUFBQUEsRUFBRSxFQUFFLENBSEg7QUFJREMsTUFBQUEsTUFBTSxFQUFFLFNBSlA7QUFLREMsTUFBQUEsVUFBVSxFQUFFLEtBTFg7QUFNRGQsTUFBQUEsVUFBVSxFQUFFLFdBTlg7QUFPRCxpQkFBVztBQUNUUixRQUFBQSxLQUFLLEVBQUU7QUFERSxPQVBWO0FBVUQsa0JBQVk7QUFDVkEsUUFBQUEsS0FBSyxFQUFFO0FBREc7QUFWWDtBQU5BO0FBakNRLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbHViLWZyb250ZW5kLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5qcz8xYjk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4SW1wb3J0U291cmNlIEB0aGVtZS11aS9jb3JlICovXG5pbXBvcnQgeyBDb250YWluZXIsIEZsZXgsIEJ1dHRvbiB9IGZyb20gXCJ0aGVtZS11aVwiO1xuaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSBcIkBlbW90aW9uL3JlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5pbXBvcnQgTG9nbyBmcm9tIFwiLi4vbG9nb1wiO1xuaW1wb3J0IExvZ29EYXJrIGZyb20gXCIuLi8uLi9hc3NldHMvQ2x1Yl9sb2dvLnBuZ1wiO1xuaW1wb3J0IE1vYmlsZURyYXdlciBmcm9tIFwiLi9tb2JpbGUtZHJhd2VyXCI7XG5pbXBvcnQgbWVudUl0ZW1zIGZyb20gXCIuLi8uLi9kYXRhL2hlYWRlci5kYXRhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlcih7IGNsYXNzTmFtZSwgaXNPcGVuLCBzZXRJc09wZW4gfSkge1xuICByZXR1cm4gKFxuICAgIDxoZWFkZXIgc3g9e3N0eWxlcy5oZWFkZXJ9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgIDxDb250YWluZXIgc3g9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgICA8TG9nbyBzcmM9e0xvZ29EYXJrLnNyY30gLz5cblxuICAgICAgICA8RmxleCBhcz1cIm5hdlwiIHN4PXtzdHlsZXMubmF2fT5cbiAgICAgICAgICB7bWVudUl0ZW1zLm1hcCgobWVudUl0ZW0sIGluZGV4KSA9PiAoXG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBhY3RpdmVDbGFzcz1cImFjdGl2ZVwiXG4gICAgICAgICAgICAgIGhyZWY9e21lbnVJdGVtLnBhdGh9XG4gICAgICAgICAgICAgIHNweT17dHJ1ZX1cbiAgICAgICAgICAgICAgc21vb3RoPXt0cnVlfVxuICAgICAgICAgICAgICBvZmZzZXQ9ey03MH1cbiAgICAgICAgICAgICAgZHVyYXRpb249ezUwMH1cbiAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge21lbnVJdGVtLmxhYmVsfVxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0ZsZXg+XG4gICAgICAgIDxCdXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9XCJkb25hdGVfX2J0blwiXG4gICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgYXJpYS1sYWJlbD1cIkdldCBTdGFydGVkXCJcbiAgICAgICAgPlxuICAgICAgICAgIEdldCBTdGFydGVkXG4gICAgICAgIDwvQnV0dG9uPlxuXG4gICAgICAgIDxNb2JpbGVEcmF3ZXIgaXNEcmF3ZXJPcGVuPXtpc09wZW59IHNldElzRHJhd2VyT3Blbj17c2V0SXNPcGVufSAvPlxuICAgICAgPC9Db250YWluZXI+XG4gICAgPC9oZWFkZXI+XG4gICk7XG59XG5cbmNvbnN0IHBvc2l0aW9uQW5pbSA9IGtleWZyYW1lc2BcbiAgZnJvbSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cblxuICB0byB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgfVxuYDtcblxuY29uc3Qgc3R5bGVzID0ge1xuICBoZWFkZXI6IHtcbiAgICBjb2xvcjogXCJ0ZXh0XCIsXG4gICAgZm9udFdlaWdodDogXCJib2R5XCIsXG4gICAgcHk6IDQsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgdG9wOiAwLFxuICAgIGxlZnQ6IDAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgdHJhbnNpdGlvbjogXCJhbGwgMC40cyBlYXNlXCIsXG4gICAgYW5pbWF0aW9uOiBgJHtwb3NpdGlvbkFuaW19IDAuNHMgZWFzZWAsXG4gICAgXCIuZG9uYXRlX19idG5cIjoge1xuICAgICAgZmxleFNocmluazogMCxcbiAgICAgIG1yOiBbMTUsIDIwLCBudWxsLCBudWxsLCAwXSxcbiAgICAgIG1sOiBbXCJhdXRvXCIsIG51bGwsIG51bGwsIG51bGwsIDBdLFxuICAgIH0sXG4gICAgXCImLnN0aWNreVwiOiB7XG4gICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJhY2tncm91bmRcIixcbiAgICAgIGNvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgIGJveFNoYWRvdzogXCIwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjA2KVwiLFxuICAgICAgcHk6IDMsXG4gICAgICBcIm5ldiA+IGFcIjoge1xuICAgICAgICBjb2xvcjogXCJ0ZXh0XCIsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIGNvbnRhaW5lcjoge1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYmV0d2VlblwiLFxuICB9LFxuICBuYXY6IHtcbiAgICBteDogXCJhdXRvXCIsXG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gICAgXCJAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpXCI6IHtcbiAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICB9LFxuICAgIGE6IHtcbiAgICAgIGZvbnRTaXplOiAyLFxuICAgICAgZm9udFdlaWdodDogXCJib2R5XCIsXG4gICAgICBweDogNSxcbiAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgICBsaW5lSGVpZ2h0OiBcIjEuMlwiLFxuICAgICAgdHJhbnNpdGlvbjogXCJhbGwgMC4xNXNcIixcbiAgICAgIFwiJjpob3ZlclwiOiB7XG4gICAgICAgIGNvbG9yOiBcInNlY29uZGFyeVwiLFxuICAgICAgfSxcbiAgICAgIFwiJi5hY3RpdmVcIjoge1xuICAgICAgICBjb2xvcjogXCJzZWNvbmRhcnlcIixcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn07XG4iXSwibmFtZXMiOlsiQ29udGFpbmVyIiwiRmxleCIsIkJ1dHRvbiIsImtleWZyYW1lcyIsIkxpbmsiLCJMb2dvIiwiTG9nb0RhcmsiLCJNb2JpbGVEcmF3ZXIiLCJtZW51SXRlbXMiLCJIZWFkZXIiLCJjbGFzc05hbWUiLCJpc09wZW4iLCJzZXRJc09wZW4iLCJzdHlsZXMiLCJoZWFkZXIiLCJjb250YWluZXIiLCJzcmMiLCJuYXYiLCJtYXAiLCJtZW51SXRlbSIsImluZGV4IiwicGF0aCIsImxhYmVsIiwicG9zaXRpb25BbmltIiwiY29sb3IiLCJmb250V2VpZ2h0IiwicHkiLCJ3aWR0aCIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsImJhY2tncm91bmRDb2xvciIsInRyYW5zaXRpb24iLCJhbmltYXRpb24iLCJmbGV4U2hyaW5rIiwibXIiLCJtbCIsImJveFNoYWRvdyIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJteCIsImEiLCJmb250U2l6ZSIsInB4IiwiY3Vyc29yIiwibGluZUhlaWdodCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/header/header.js\n");

/***/ }),

/***/ "./src/components/header/mobile-drawer.js":
/*!************************************************!*\
  !*** ./src/components/header/mobile-drawer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MobileDrawer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"@emotion/react\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_emotion_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-icons/fa */ \"react-icons/fa\");\n/* harmony import */ var react_icons_fa__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_icons_fa__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _data_header_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../data/header.data */ \"./src/data/header.data.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\header\\\\mobile-drawer.js\";\n\n\n\n\n\n\n\nconst social = [{\n  path: \"https://www.facebook.com/\",\n  icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_icons_fa__WEBPACK_IMPORTED_MODULE_4__.FaFacebookF, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }, undefined)\n}, {\n  path: \"https://www.twitter.com\",\n  icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_icons_fa__WEBPACK_IMPORTED_MODULE_4__.FaTwitter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, undefined)\n}, {\n  path: \"/\",\n  icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_icons_fa__WEBPACK_IMPORTED_MODULE_4__.FaGithubAlt, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, undefined)\n}, {\n  path: \"/\",\n  icon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_icons_fa__WEBPACK_IMPORTED_MODULE_4__.FaDribbble, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, undefined)\n}];\nfunction MobileDrawer({\n  isDrawerOpen,\n  setIsDrawerOpen\n}) {\n  //const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n    sx: styles.handler,\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n      sx: styles.burger,\n      onClick: () => setIsDrawerOpen(!isDrawerOpen),\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        sx: styles.line1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        sx: styles.line2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        sx: styles.line3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isDrawerOpen === true ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n      sx: styles.content,\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Close, {\n        sx: styles.close,\n        onClick: () => setIsDrawerOpen(!isDrawerOpen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        sx: styles.menu,\n        children: _data_header_data__WEBPACK_IMPORTED_MODULE_5__[\"default\"].map((menuItem, index) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n          activeClass: \"active\",\n          href: menuItem.path,\n          spy: true,\n          smooth: true,\n          offset: -70,\n          duration: 500,\n          children: menuItem.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n        sx: styles.menuFooter,\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n          sx: styles.social,\n          children: social.map((socialItem, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {\n            as: \"span\",\n            sx: styles.social.icon,\n            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n              href: socialItem.path,\n              children: socialItem.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_1__.Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\nconst drawerAnimation = _emotion_react__WEBPACK_IMPORTED_MODULE_3__.keyframes`\n 0% {  width: 0px; }\n 100% {  width: 40%; opacity: 1; }\n`;\nconst styles = {\n  handler: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexShrink: \"0\",\n    width: \"26px\",\n    \"@media screen and (min-width: 1024px)\": {\n      display: \"none\"\n    }\n  },\n  burger: {\n    cursor: \"pointer\"\n  },\n  line1: {\n    width: \"26px\",\n    height: \"3px\",\n    backgroundColor: \"#AFA4DB\",\n    margin: \"5px\"\n  },\n  line2: {\n    width: \"26px\",\n    height: \"3px\",\n    backgroundColor: \"#AFA4DB\",\n    margin: \"5px\"\n  },\n  line3: {\n    width: \"26px\",\n    height: \"3px\",\n    backgroundColor: \"#AFA4DB\",\n    margin: \"5px\"\n  },\n  drawer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"dark\",\n    position: \"fixed\",\n    zIndex: \"1000\"\n  },\n  close: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0px\",\n    right: \"10px\",\n    zIndex: \"1\",\n    cursor: \"pointer\",\n    width: \"50px\",\n    height: \"50px\"\n  },\n  content: {\n    position: \"absolute\",\n    right: \"0px\",\n    top: \"0\",\n    width: \"40%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: \"#F4F5FF\",\n    zIndex: \"1000\",\n    animation: `${drawerAnimation} 0.4s ease`\n  },\n  menu: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    py: \"30px\",\n    a: {\n      fontSize: \"16px\",\n      fontWeight: \"500\",\n      color: \"text_white\",\n      py: \"20px\",\n      cursor: \"pointer\",\n      borderBottom: \"1px solid #e8e5e5\",\n      transition: \"all 0.25s\",\n      \"&:hover\": {\n        color: \"secondary\"\n      },\n      \"&.active\": {\n        color: \"secondary\"\n      }\n    }\n  },\n  menuFooter: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    py: \"30px\" // mt: \"auto\",\n\n  },\n  social: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    icon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: \"text\",\n      fontSize: 20,\n      mr: \"15px\",\n      transition: \"all 0.25s\",\n      cursor: \"pointer\",\n      \":last-child\": {\n        mr: \"0\"\n      },\n      \"&:hover\": {\n        color: \"primary\"\n      }\n    }\n  },\n  button: {\n    color: \"white\",\n    fontSize: \"14px\",\n    fw: \"700\",\n    height: \"45px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    py: \"0\"\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/header/mobile-drawer.js\n");

/***/ }),

/***/ "./src/components/layout.js":
/*!**********************************!*\
  !*** ./src/components/layout.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_stickynode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-stickynode */ \"react-stickynode\");\n/* harmony import */ var react_stickynode__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_stickynode__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _header_header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./header/header */ \"./src/components/header/header.js\");\n/* harmony import */ var _footer_footer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer/footer */ \"./src/components/footer/footer.js\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @theme-ui/core/jsx-dev-runtime */ \"@theme-ui/core/jsx-dev-runtime\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\layout.js\";\n\n/** @jsxImportSource @theme-ui/core */\n\n\n\n\n\n\nfunction Layout({\n  children\n}) {\n  const {\n    0: isSticky,\n    1: setIsSticky\n  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n\n  const handleStateChange = status => {\n    if (status.status === (react_stickynode__WEBPACK_IMPORTED_MODULE_2___default().STATUS_FIXED)) {\n      setIsSticky(true);\n    } else if (status.status === (react_stickynode__WEBPACK_IMPORTED_MODULE_2___default().STATUS_ORIGINAL)) {\n      setIsSticky(false);\n    }\n  };\n\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), {\n    children: [(0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((react_stickynode__WEBPACK_IMPORTED_MODULE_2___default()), {\n      innerZ: 1001,\n      top: 0,\n      onStateChange: handleStateChange,\n      children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_header_header__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        className: `${isSticky ? \"sticky\" : \"unSticky\"}`,\n        isOpen: isOpen,\n        setIsOpen: setIsOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"main\", {\n      id: \"content\",\n      sx: {\n        variant: \"layout.main\"\n      } // style={\n      //   isOpen ? { background: \"rgba(255, 0, 0, 0.25)\", zIndex: \"999\" } : {}\n      // }\n      ,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_footer_footer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9sYXlvdXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZSxTQUFTTSxNQUFULENBQWdCO0FBQUVDLEVBQUFBO0FBQUYsQ0FBaEIsRUFBOEI7QUFDM0MsUUFBTTtBQUFBLE9BQUNDLFFBQUQ7QUFBQSxPQUFXQztBQUFYLE1BQTBCUCwrQ0FBUSxDQUFDLEtBQUQsQ0FBeEM7QUFDQSxRQUFNO0FBQUEsT0FBQ1EsTUFBRDtBQUFBLE9BQVNDO0FBQVQsTUFBc0JULCtDQUFRLENBQUMsS0FBRCxDQUFwQzs7QUFFQSxRQUFNVSxpQkFBaUIsR0FBSUMsTUFBRCxJQUFZO0FBQ3BDLFFBQUlBLE1BQU0sQ0FBQ0EsTUFBUCxLQUFrQlYsc0VBQXRCLEVBQTJDO0FBQ3pDTSxNQUFBQSxXQUFXLENBQUMsSUFBRCxDQUFYO0FBQ0QsS0FGRCxNQUVPLElBQUlJLE1BQU0sQ0FBQ0EsTUFBUCxLQUFrQlYseUVBQXRCLEVBQThDO0FBQ25ETSxNQUFBQSxXQUFXLENBQUMsS0FBRCxDQUFYO0FBQ0Q7QUFDRixHQU5EOztBQVFBLFNBQ0UsdUVBQUMsdURBQUQ7QUFBQSxlQUNFLHVFQUFDLHlEQUFEO0FBQVEsWUFBTSxFQUFFLElBQWhCO0FBQXNCLFNBQUcsRUFBRSxDQUEzQjtBQUE4QixtQkFBYSxFQUFFRyxpQkFBN0M7QUFBQSxnQkFDRSx1RUFBQyxzREFBRDtBQUNFLGlCQUFTLEVBQUcsR0FBRUosUUFBUSxHQUFHLFFBQUgsR0FBYyxVQUFXLEVBRGpEO0FBRUUsY0FBTSxFQUFFRSxNQUZWO0FBR0UsaUJBQVMsRUFBRUM7QUFIYjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQURGLEVBUUU7QUFDRSxRQUFFLEVBQUMsU0FETDtBQUVFLFFBQUUsRUFBRTtBQUFFSyxRQUFBQSxPQUFPLEVBQUU7QUFBWCxPQUZOLENBR0U7QUFDQTtBQUNBO0FBTEY7QUFBQSxnQkFPR1Q7QUFQSDtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBUkYsRUFpQkUsdUVBQUMsc0RBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQWpCRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFERjtBQXFCRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9zcmMvY29tcG9uZW50cy9sYXlvdXQuanM/YjAxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeEltcG9ydFNvdXJjZSBAdGhlbWUtdWkvY29yZSAqL1xuaW1wb3J0IHsganN4IH0gZnJvbSBcInRoZW1lLXVpXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBTdGlja3kgZnJvbSBcInJlYWN0LXN0aWNreW5vZGVcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vaGVhZGVyL2hlYWRlclwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi9mb290ZXIvZm9vdGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExheW91dCh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgW2lzU3RpY2t5LCBzZXRJc1N0aWNreV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3QgaGFuZGxlU3RhdGVDaGFuZ2UgPSAoc3RhdHVzKSA9PiB7XG4gICAgaWYgKHN0YXR1cy5zdGF0dXMgPT09IFN0aWNreS5TVEFUVVNfRklYRUQpIHtcbiAgICAgIHNldElzU3RpY2t5KHRydWUpO1xuICAgIH0gZWxzZSBpZiAoc3RhdHVzLnN0YXR1cyA9PT0gU3RpY2t5LlNUQVRVU19PUklHSU5BTCkge1xuICAgICAgc2V0SXNTdGlja3koZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxTdGlja3kgaW5uZXJaPXsxMDAxfSB0b3A9ezB9IG9uU3RhdGVDaGFuZ2U9e2hhbmRsZVN0YXRlQ2hhbmdlfT5cbiAgICAgICAgPEhlYWRlclxuICAgICAgICAgIGNsYXNzTmFtZT17YCR7aXNTdGlja3kgPyBcInN0aWNreVwiIDogXCJ1blN0aWNreVwifWB9XG4gICAgICAgICAgaXNPcGVuPXtpc09wZW59XG4gICAgICAgICAgc2V0SXNPcGVuPXtzZXRJc09wZW59XG4gICAgICAgIC8+XG4gICAgICA8L1N0aWNreT5cbiAgICAgIDxtYWluXG4gICAgICAgIGlkPVwiY29udGVudFwiXG4gICAgICAgIHN4PXt7IHZhcmlhbnQ6IFwibGF5b3V0Lm1haW5cIiB9fVxuICAgICAgICAvLyBzdHlsZT17XG4gICAgICAgIC8vICAgaXNPcGVuID8geyBiYWNrZ3JvdW5kOiBcInJnYmEoMjU1LCAwLCAwLCAwLjI1KVwiLCB6SW5kZXg6IFwiOTk5XCIgfSA6IHt9XG4gICAgICAgIC8vIH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9tYWluPlxuICAgICAgPEZvb3RlciAvPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59XG4iXSwibmFtZXMiOlsianN4IiwiUmVhY3QiLCJ1c2VTdGF0ZSIsIlN0aWNreSIsIkhlYWRlciIsIkZvb3RlciIsIkxheW91dCIsImNoaWxkcmVuIiwiaXNTdGlja3kiLCJzZXRJc1N0aWNreSIsImlzT3BlbiIsInNldElzT3BlbiIsImhhbmRsZVN0YXRlQ2hhbmdlIiwic3RhdHVzIiwiU1RBVFVTX0ZJWEVEIiwiU1RBVFVTX09SSUdJTkFMIiwidmFyaWFudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/layout.js\n");

/***/ }),

/***/ "./src/components/link.js":
/*!********************************!*\
  !*** ./src/components/link.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NavLink\": () => (/* binding */ NavLink),\n/* harmony export */   \"Link\": () => (/* binding */ Link)\n/* harmony export */ });\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @theme-ui/core/jsx-dev-runtime */ \"@theme-ui/core/jsx-dev-runtime\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nconst _excluded = [\"path\", \"label\", \"children\"],\n      _excluded2 = [\"path\", \"label\", \"children\"];\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\link.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsxImportSource @theme-ui/core */\n\n\n\nfunction NavLink(_ref) {\n  let {\n    path,\n    label,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"h1\", {\n    children: \"NavLink\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\nfunction Link(_ref2) {\n  let {\n    path,\n    label,\n    children\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Link, _objectSpread(_objectSpread({}, rest), {}, {\n    href: path,\n    children: children || label\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRU8sU0FBU0MsT0FBVCxPQUFxRDtBQUFBLE1BQXBDO0FBQUVLLElBQUFBLElBQUY7QUFBUUMsSUFBQUEsS0FBUjtBQUFlQyxJQUFBQTtBQUFmLEdBQW9DO0FBQUEsTUFBUkMsSUFBUTs7QUFDMUQsU0FBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQUFQO0FBQ0Q7QUFFTSxTQUFTTixJQUFULFFBQWtEO0FBQUEsTUFBcEM7QUFBRUcsSUFBQUEsSUFBRjtBQUFRQyxJQUFBQSxLQUFSO0FBQWVDLElBQUFBO0FBQWYsR0FBb0M7QUFBQSxNQUFSQyxJQUFROztBQUN2RCxTQUNFLHVFQUFDLDBDQUFELGtDQUFPQSxJQUFQO0FBQWEsUUFBSSxFQUFFSCxJQUFuQjtBQUFBLGNBQ0dFLFFBQVEsSUFBSUQ7QUFEZjtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREY7QUFLRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9zcmMvY29tcG9uZW50cy9saW5rLmpzPzI3ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3hJbXBvcnRTb3VyY2UgQHRoZW1lLXVpL2NvcmUgKi9cbmltcG9ydCB7IGpzeCwgTmF2TGluayBhcyBNZW51TGluaywgTGluayBhcyBBIH0gZnJvbSBcInRoZW1lLXVpXCI7XG5pbXBvcnQgTmV4dExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gTmF2TGluayh7IHBhdGgsIGxhYmVsLCBjaGlsZHJlbiwgLi4ucmVzdCB9KSB7XG4gIHJldHVybiA8aDE+TmF2TGluazwvaDE+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTGluayh7IHBhdGgsIGxhYmVsLCBjaGlsZHJlbiwgLi4ucmVzdCB9KSB7XG4gIHJldHVybiAoXG4gICAgPEEgey4uLnJlc3R9IGhyZWY9e3BhdGh9PlxuICAgICAge2NoaWxkcmVuIHx8IGxhYmVsfVxuICAgIDwvQT5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJOYXZMaW5rIiwiTWVudUxpbmsiLCJMaW5rIiwiQSIsIk5leHRMaW5rIiwicGF0aCIsImxhYmVsIiwiY2hpbGRyZW4iLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/link.js\n");

/***/ }),

/***/ "./src/components/logo.js":
/*!********************************!*\
  !*** ./src/components/logo.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Logo)\n/* harmony export */ });\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! theme-ui */ \"theme-ui\");\n/* harmony import */ var theme_ui__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(theme_ui__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/link */ \"./src/components/link.js\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @theme-ui/core/jsx-dev-runtime */ \"@theme-ui/core/jsx-dev-runtime\");\n/* harmony import */ var _theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nconst _excluded = [\"src\"];\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\logo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsxImportSource @theme-ui/core */\n\n\n\nfunction Logo(_ref) {\n  let {\n    src\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_components_link__WEBPACK_IMPORTED_MODULE_1__.Link, _objectSpread(_objectSpread({\n    path: \"/\",\n    sx: {\n      variant: \"links.logo\",\n      display: \"flex\",\n      cursor: \"pointer\",\n      mr: 15\n    }\n  }, rest), {}, {\n    children: (0,_theme_ui_core_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(theme_ui__WEBPACK_IMPORTED_MODULE_0__.Image, {\n      src: src,\n      alt: \"Landing page logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9sb2dvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRWUsU0FBU0csSUFBVCxPQUFnQztBQUFBLE1BQWxCO0FBQUVDLElBQUFBO0FBQUYsR0FBa0I7QUFBQSxNQUFSQyxJQUFROztBQUM3QyxTQUNFLHVFQUFDLGtEQUFEO0FBQ0UsUUFBSSxFQUFDLEdBRFA7QUFFRSxNQUFFLEVBQUU7QUFDRkMsTUFBQUEsT0FBTyxFQUFFLFlBRFA7QUFFRkMsTUFBQUEsT0FBTyxFQUFFLE1BRlA7QUFHRkMsTUFBQUEsTUFBTSxFQUFFLFNBSE47QUFJRkMsTUFBQUEsRUFBRSxFQUFFO0FBSkY7QUFGTixLQVFNSixJQVJOO0FBQUEsY0FVRSx1RUFBQywyQ0FBRDtBQUFPLFNBQUcsRUFBRUQsR0FBWjtBQUFpQixTQUFHLEVBQUM7QUFBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVZGO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFERjtBQWNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL3NyYy9jb21wb25lbnRzL2xvZ28uanM/OTE4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeEltcG9ydFNvdXJjZSBAdGhlbWUtdWkvY29yZSAqL1xuaW1wb3J0IHsganN4LCBJbWFnZSB9IGZyb20gXCJ0aGVtZS11aVwiO1xuaW1wb3J0IHsgTGluayB9IGZyb20gXCIuLi9jb21wb25lbnRzL2xpbmtcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9nbyh7IHNyYywgLi4ucmVzdCB9KSB7XG4gIHJldHVybiAoXG4gICAgPExpbmtcbiAgICAgIHBhdGg9XCIvXCJcbiAgICAgIHN4PXt7XG4gICAgICAgIHZhcmlhbnQ6IFwibGlua3MubG9nb1wiLFxuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgY3Vyc29yOiBcInBvaW50ZXJcIixcbiAgICAgICAgbXI6IDE1LFxuICAgICAgfX1cbiAgICAgIHsuLi5yZXN0fVxuICAgID5cbiAgICAgIDxJbWFnZSBzcmM9e3NyY30gYWx0PVwiTGFuZGluZyBwYWdlIGxvZ29cIiAvPlxuICAgIDwvTGluaz5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJJbWFnZSIsIkxpbmsiLCJMb2dvIiwic3JjIiwicmVzdCIsInZhcmlhbnQiLCJkaXNwbGF5IiwiY3Vyc29yIiwibXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/logo.js\n");

/***/ }),

/***/ "./src/components/seo.js":
/*!*******************************!*\
  !*** ./src/components/seo.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SEO)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\components\\\\seo.js\";\n\n\n\nfunction SEO({\n  description = 'startup product landing page',\n  author = 'JSM',\n  meta,\n  title = 'startup landing title'\n}) {\n  const metaData = [{\n    name: `description`,\n    content: description\n  }, {\n    property: `og:title`,\n    content: title\n  }, {\n    property: `og:description`,\n    content: description\n  }, {\n    property: `og:type`,\n    content: `website`\n  }, {\n    name: `twitter:card`,\n    content: `summary`\n  }, {\n    name: `twitter:creator`,\n    content: author\n  }, {\n    name: `twitter:title`,\n    content: title\n  }, {\n    name: `twitter:description`,\n    content: description\n  }].concat(meta);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"title\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), metaData.map(({\n      name,\n      content\n    }, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"meta\", {\n      name: name,\n      content: content\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\nSEO.defaultProps = {\n  lang: `en`,\n  meta: []\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9zZW8uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVlLFNBQVNFLEdBQVQsQ0FBYTtBQUMxQkMsRUFBQUEsV0FBVyxHQUFHLDhCQURZO0FBRTFCQyxFQUFBQSxNQUFNLEdBQUcsS0FGaUI7QUFHMUJDLEVBQUFBLElBSDBCO0FBSTFCQyxFQUFBQSxLQUFLLEdBQUc7QUFKa0IsQ0FBYixFQUtaO0FBQ0QsUUFBTUMsUUFBUSxHQUFHLENBQ2Y7QUFDRUMsSUFBQUEsSUFBSSxFQUFHLGFBRFQ7QUFFRUMsSUFBQUEsT0FBTyxFQUFFTjtBQUZYLEdBRGUsRUFLZjtBQUNFTyxJQUFBQSxRQUFRLEVBQUcsVUFEYjtBQUVFRCxJQUFBQSxPQUFPLEVBQUVIO0FBRlgsR0FMZSxFQVNmO0FBQ0VJLElBQUFBLFFBQVEsRUFBRyxnQkFEYjtBQUVFRCxJQUFBQSxPQUFPLEVBQUVOO0FBRlgsR0FUZSxFQWFmO0FBQ0VPLElBQUFBLFFBQVEsRUFBRyxTQURiO0FBRUVELElBQUFBLE9BQU8sRUFBRztBQUZaLEdBYmUsRUFpQmY7QUFDRUQsSUFBQUEsSUFBSSxFQUFHLGNBRFQ7QUFFRUMsSUFBQUEsT0FBTyxFQUFHO0FBRlosR0FqQmUsRUFxQmY7QUFDRUQsSUFBQUEsSUFBSSxFQUFHLGlCQURUO0FBRUVDLElBQUFBLE9BQU8sRUFBRUw7QUFGWCxHQXJCZSxFQXlCZjtBQUNFSSxJQUFBQSxJQUFJLEVBQUcsZUFEVDtBQUVFQyxJQUFBQSxPQUFPLEVBQUVIO0FBRlgsR0F6QmUsRUE2QmY7QUFDRUUsSUFBQUEsSUFBSSxFQUFHLHFCQURUO0FBRUVDLElBQUFBLE9BQU8sRUFBRU47QUFGWCxHQTdCZSxFQWlDZlEsTUFqQ2UsQ0FpQ1JOLElBakNRLENBQWpCO0FBbUNBLHNCQUNFLDhEQUFDLGtEQUFEO0FBQUEsNEJBQ0U7QUFBQSxnQkFBUUM7QUFBUjtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBREYsRUFFR0MsUUFBUSxDQUFDSyxHQUFULENBQWEsQ0FBQztBQUFFSixNQUFBQSxJQUFGO0FBQVFDLE1BQUFBO0FBQVIsS0FBRCxFQUFvQkksQ0FBcEIsa0JBQ1o7QUFBYyxVQUFJLEVBQUVMLElBQXBCO0FBQTBCLGFBQU8sRUFBRUM7QUFBbkMsT0FBV0ksQ0FBWDtBQUFBO0FBQUE7QUFBQTtBQUFBLFlBREQsQ0FGSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFERjtBQVFEO0FBRURYLEdBQUcsQ0FBQ1ksWUFBSixHQUFtQjtBQUNqQkMsRUFBQUEsSUFBSSxFQUFHLElBRFU7QUFFakJWLEVBQUFBLElBQUksRUFBRTtBQUZXLENBQW5CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL3NyYy9jb21wb25lbnRzL3Nlby5qcz9iZWU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTRU8oe1xuICBkZXNjcmlwdGlvbiA9ICdzdGFydHVwIHByb2R1Y3QgbGFuZGluZyBwYWdlJyxcbiAgYXV0aG9yID0gJ0pTTScsXG4gIG1ldGEsXG4gIHRpdGxlID0gJ3N0YXJ0dXAgbGFuZGluZyB0aXRsZScsXG59KSB7XG4gIGNvbnN0IG1ldGFEYXRhID0gW1xuICAgIHtcbiAgICAgIG5hbWU6IGBkZXNjcmlwdGlvbmAsXG4gICAgICBjb250ZW50OiBkZXNjcmlwdGlvbixcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3BlcnR5OiBgb2c6dGl0bGVgLFxuICAgICAgY29udGVudDogdGl0bGUsXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm9wZXJ0eTogYG9nOmRlc2NyaXB0aW9uYCxcbiAgICAgIGNvbnRlbnQ6IGRlc2NyaXB0aW9uLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvcGVydHk6IGBvZzp0eXBlYCxcbiAgICAgIGNvbnRlbnQ6IGB3ZWJzaXRlYCxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IGB0d2l0dGVyOmNhcmRgLFxuICAgICAgY29udGVudDogYHN1bW1hcnlgLFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogYHR3aXR0ZXI6Y3JlYXRvcmAsXG4gICAgICBjb250ZW50OiBhdXRob3IsXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBgdHdpdHRlcjp0aXRsZWAsXG4gICAgICBjb250ZW50OiB0aXRsZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IGB0d2l0dGVyOmRlc2NyaXB0aW9uYCxcbiAgICAgIGNvbnRlbnQ6IGRlc2NyaXB0aW9uLFxuICAgIH0sXG4gIF0uY29uY2F0KG1ldGEpO1xuICBcbiAgcmV0dXJuIChcbiAgICA8SGVhZD5cbiAgICAgIDx0aXRsZT57dGl0bGV9PC90aXRsZT5cbiAgICAgIHttZXRhRGF0YS5tYXAoKHsgbmFtZSwgY29udGVudCB9LCBpKSA9PiAoXG4gICAgICAgIDxtZXRhIGtleT17aX0gbmFtZT17bmFtZX0gY29udGVudD17Y29udGVudH0gLz5cbiAgICAgICkpfVxuICAgIDwvSGVhZD5cbiAgKTtcbn1cblxuU0VPLmRlZmF1bHRQcm9wcyA9IHtcbiAgbGFuZzogYGVuYCxcbiAgbWV0YTogW10sXG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiSGVhZCIsIlNFTyIsImRlc2NyaXB0aW9uIiwiYXV0aG9yIiwibWV0YSIsInRpdGxlIiwibWV0YURhdGEiLCJuYW1lIiwiY29udGVudCIsInByb3BlcnR5IiwiY29uY2F0IiwibWFwIiwiaSIsImRlZmF1bHRQcm9wcyIsImxhbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/seo.js\n");

/***/ }),

/***/ "./src/data/footer.data.js":
/*!*********************************!*\
  !*** ./src/data/footer.data.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([{\n  path: \"/\",\n  label: \"Home\"\n}, {\n  path: \"/achievements\",\n  label: \"Achievements\"\n}, {\n  path: \"/events\",\n  label: \"Events\"\n}, {\n  path: \"/committee\",\n  label: \"Committee\"\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YS9mb290ZXIuZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FDYjtBQUNFQSxFQUFBQSxJQUFJLEVBQUUsR0FEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUU7QUFGVCxDQURhLEVBS2I7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLGVBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFO0FBRlQsQ0FMYSxFQVNiO0FBQ0VELEVBQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRTtBQUZULENBVGEsRUFhYjtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsWUFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUU7QUFGVCxDQWJhLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbHViLWZyb250ZW5kLy4vc3JjL2RhdGEvZm9vdGVyLmRhdGEuanM/ODg2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBbXG4gIHtcbiAgICBwYXRoOiBcIi9cIixcbiAgICBsYWJlbDogXCJIb21lXCIsXG4gIH0sXG4gIHtcbiAgICBwYXRoOiBcIi9hY2hpZXZlbWVudHNcIixcbiAgICBsYWJlbDogXCJBY2hpZXZlbWVudHNcIixcbiAgfSxcbiAge1xuICAgIHBhdGg6IFwiL2V2ZW50c1wiLFxuICAgIGxhYmVsOiBcIkV2ZW50c1wiLFxuICB9LFxuICB7XG4gICAgcGF0aDogXCIvY29tbWl0dGVlXCIsXG4gICAgbGFiZWw6IFwiQ29tbWl0dGVlXCIsXG4gIH0sXG5dO1xuIl0sIm5hbWVzIjpbInBhdGgiLCJsYWJlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/data/footer.data.js\n");

/***/ }),

/***/ "./src/data/header.data.js":
/*!*********************************!*\
  !*** ./src/data/header.data.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([{\n  path: \"/\",\n  label: \"Home\"\n}, {\n  path: \"/achievements\",\n  label: \"Achievements\"\n}, {\n  path: \"/events\",\n  label: \"Events\"\n}, {\n  path: \"/committee\",\n  label: \"Committee\"\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YS9oZWFkZXIuZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FDYjtBQUNFQSxFQUFBQSxJQUFJLEVBQUUsR0FEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUU7QUFGVCxDQURhLEVBS2I7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLGVBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFO0FBRlQsQ0FMYSxFQVNiO0FBQ0VELEVBQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRTtBQUZULENBVGEsRUFhYjtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsWUFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUU7QUFGVCxDQWJhLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbHViLWZyb250ZW5kLy4vc3JjL2RhdGEvaGVhZGVyLmRhdGEuanM/ZTMwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBbXG4gIHtcbiAgICBwYXRoOiBcIi9cIixcbiAgICBsYWJlbDogXCJIb21lXCIsXG4gIH0sXG4gIHtcbiAgICBwYXRoOiBcIi9hY2hpZXZlbWVudHNcIixcbiAgICBsYWJlbDogXCJBY2hpZXZlbWVudHNcIixcbiAgfSxcbiAge1xuICAgIHBhdGg6IFwiL2V2ZW50c1wiLFxuICAgIGxhYmVsOiBcIkV2ZW50c1wiLFxuICB9LFxuICB7XG4gICAgcGF0aDogXCIvY29tbWl0dGVlXCIsXG4gICAgbGFiZWw6IFwiQ29tbWl0dGVlXCIsXG4gIH0sXG5dO1xuIl0sIm5hbWVzIjpbInBhdGgiLCJsYWJlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/data/header.data.js\n");

/***/ }),

/***/ "./src/pages/_app.js":
/*!***************************!*\
  !*** ./src/pages/_app.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _theme_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @theme-ui/core */ \"@theme-ui/core\");\n/* harmony import */ var _theme_ui_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_theme_ui_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../theme */ \"./src/theme/index.js\");\n/* harmony import */ var _components_seo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/seo */ \"./src/components/seo.js\");\n/* harmony import */ var _components_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/layout */ \"./src/components/layout.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar _jsxFileName = \"C:\\\\Users\\\\edkni\\\\Documents\\\\projects\\\\ROBOTICS CLUB page\\\\New Robotics site\\\\frontend\\\\club-frontend\\\\src\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_theme_ui_core__WEBPACK_IMPORTED_MODULE_1__.ThemeProvider, {\n    theme: _theme__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_components_layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_components_seo__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        title: \"Robotics Club,WRC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxTQUFTSSxLQUFULENBQWU7QUFBRUMsRUFBQUEsU0FBRjtBQUFhQyxFQUFBQTtBQUFiLENBQWYsRUFBeUM7QUFDdkMsc0JBQ0UsOERBQUMseURBQUQ7QUFBZSxTQUFLLEVBQUVMLDhDQUF0QjtBQUFBLDJCQUNFLDhEQUFDLDBEQUFEO0FBQUEsOEJBQ0UsOERBQUMsdURBQUQ7QUFBSyxhQUFLLEVBQUM7QUFBWDtBQUFBO0FBQUE7QUFBQTtBQUFBLGNBREYsZUFFRSw4REFBQyxTQUFELG9CQUFlSyxTQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FGRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBREY7QUFRRDs7QUFFRCxpRUFBZUYsS0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9zcmMvcGFnZXMvX2FwcC5qcz84ZmRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4uLy4uL3N0eWxlcy9nbG9iYWxzLmNzc1wiO1xuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gXCJAdGhlbWUtdWkvY29yZVwiO1xuaW1wb3J0IHRoZW1lIGZyb20gXCIuLi90aGVtZVwiO1xuaW1wb3J0IFNFTyBmcm9tIFwiLi4vY29tcG9uZW50cy9zZW9cIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvbGF5b3V0XCI7XG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8VGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWV9PlxuICAgICAgPExheW91dD5cbiAgICAgICAgPFNFTyB0aXRsZT1cIlJvYm90aWNzIENsdWIsV1JDXCIgLz5cbiAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgPC9UaGVtZVByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcDtcbiJdLCJuYW1lcyI6WyJUaGVtZVByb3ZpZGVyIiwidGhlbWUiLCJTRU8iLCJMYXlvdXQiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.js\n");

/***/ }),

/***/ "./src/theme/index.js":
/*!****************************!*\
  !*** ./src/theme/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  // example colors with dark mode\n  colors: {\n    text: \"#343D48\",\n    // body color and primary color\n    text_secondary: \"#02073E\",\n    // secondary body color\n    heading: \"#0F2137\",\n    // primary heading color\n    heading_secondary: \"#0F2137\",\n    // heading color\n    background: \"#FFFFFF\",\n    // body background color\n    background_secondary: \"#F9FBFD\",\n    // secondary background color\n    border_color: \"#E5ECF4\",\n    // border color\n    yellow: \"#FFA740\",\n    // border color\n    primary: \"#57CDE2\",\n    // primary button and link color\n    secondary: \"#00008B\",\n    // secondary color - can be used for hover states\n    muted: \"#E4E4E4\",\n    // muted color\n    accent: \"#609\",\n    // a contrast color for emphasizing UI\n    // highlight\ta background color for highlighting text\n    modes: {\n      dark: {\n        text: \"#fff\",\n        background: \"#000\",\n        primary: \"#0cf\",\n        secondary: \"#09c\",\n        muted: \"#111\"\n      }\n    }\n  },\n  breakpoints: [\"480px\", \"640px\", \"768px\", \"1024px\", \"1220px\", \"1366px\", \"1620px\"],\n  fonts: {\n    body: \"'DM Sans', sans-serif\",\n    heading: \"'DM Sans', sans-serif\"\n  },\n  fontSizes: [12, 15, 16, 18, 20, 22, 24, 28, 32, 36, 42, 48, 52, 64],\n  fontWeights: {\n    body: \"normal\",\n    heading: 500,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.8,\n    heading: 1.5\n  },\n  letterSpacings: {\n    body: \"normal\",\n    caps: \"0.2em\",\n    heading: \"-0.5px\"\n  },\n  space: [0, 5, 10, 15, 20, 25, 30, 50, 80, 100, 120, 150],\n  // variants can use custom, user-defined names\n  layout: {\n    container: {\n      maxWidth: [\"100%\", null, null, \"780px\", \"1020px\", \"1200px\", null, \"1310px\"],\n      px: [4, 6]\n    },\n    header: {\n      color: \"#02073E\",\n      fontWeight: \"normal\",\n      py: 3,\n      position: \"absolute\",\n      width: \"100%\"\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    main: {}\n  },\n  section: {\n    keyFeature: {\n      pt: [8, null, 9, null, null, 10],\n      pb: [\"90px\", null, 9, null, null, 10, null, \"165px\"]\n    },\n    feature: {\n      pb: [8, null, 9, null, null, 10, null, \"170px\"]\n    },\n    news: {\n      pb: [8, null, 9, null, null, 10, null, \"170px\"]\n    },\n    coreFeature: {\n      pb: [8, null, 9, null, null, 10, null, \"170px\"],\n      overflow: \"hidden\"\n    },\n    testimonial: {\n      pt: [8, null, 8, \"70px\", null, 8, null, \"145px\"],\n      pb: [\"90px\", null, 9, null, null, 10, null, \"190px\"],\n      overflow: \"hidden\"\n    },\n    services: {\n      pb: [\"90px\", null, 9, null, null, 10, null, \"150px\"]\n    },\n    pricing: {\n      pt: [8, null, 9, null, null, 10, null, \"180px\"],\n      pb: [\"90px\", null, 9, null, null, 10, null, \"180px\"]\n    }\n  },\n  sectionHeader: {\n    width: [\"100%\", null, \"540px\"],\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    mt: [\"-3px\", null, -1],\n    marginBottom: [\"50px\", null, \"60px\", null, null, \"65px\", null, \"80px\"],\n    mx: \"auto\",\n    title: {\n      fontSize: [\"24px\", null, \"28px\", null, null, \"32px\", null, \"36px\"],\n      color: \"heading\",\n      lineHeight: [1.3, null, null, 1.25],\n      textAlign: \"center\",\n      fontWeight: \"700\",\n      letterSpacing: \"-.5px\"\n    },\n    subTitle: {\n      fontSize: [0, \"13px\", null, \"14px\"],\n      color: \"primary\",\n      textAlign: \"center\",\n      letterSpacing: [\"1.5px\", null, \"2px\"],\n      textTransform: \"uppercase\",\n      fontWeight: \"700\",\n      mb: 2,\n      lineHeight: 1.5\n    }\n  },\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: [4],\n      letterSpacing: \"-.55px\",\n      color: \"heading\"\n    },\n    heroPrimary: {\n      color: \"heading\",\n      fontSize: [\"32px\", \"36px\", \"42px\", \"40px\", \"42px\", \"52px\", \"58px\", \"66px\"],\n      lineHeight: [1.3, null, null, null, null, 1.2],\n      fontWeight: 700,\n      mb: [4, null, null, null, null, 5]\n    },\n    heroSecondary: {\n      fontSize: [2, null, \"17px\", null, null, \"19px\", 4],\n      lineHeight: [1.9, null, null, 2],\n      fontWeight: \"body\",\n      mb: 5,\n      px: [0, null, 5, 6, null, 8, 9],\n      color: \"heading\"\n    },\n    title: {\n      // extends the text.heading styles\n      variant: \"text.heading\",\n      fontWeight: \"bold\",\n      fontSize: [3, null, 4],\n      lineHeight: 1.25,\n      mb: 1\n    },\n    lead: {\n      fontSize: 40,\n      fontFamily: \"DM Sans\",\n      fontWeight: \"500\",\n      lineHeight: \"60px\",\n      letterSpacing: \"-1.5px\",\n      color: \"#0F2137\"\n    },\n    muted: {\n      lineHeight: \"26px\",\n      color: \"muted\"\n    },\n    secondary: {\n      fontWeight: 500,\n      color: \"#00A99D\",\n      lineHeight: \"40px\"\n    }\n  },\n  links: {\n    default: {\n      cursor: \"pointer\"\n    },\n    bold: {\n      fontWeight: \"bold\"\n    },\n    nav: {\n      display: [\"none\", null, \"inline-block\"],\n      px: 25,\n      fontWeight: \"normal\"\n    },\n    blog: {\n      display: \"block\",\n      px: 0,\n      color: \"inherit\",\n      textDecoration: \"none\",\n      fontSize: \"inherit\",\n      transition: \"color 0.25s\",\n      \"&:hover\": {\n        color: \"primary\"\n      }\n    },\n    footer: {\n      display: \"block\",\n      px: 0,\n      color: \"inherit\",\n      textDecoration: \"none\"\n    },\n    logo: {\n      display: \"flex\"\n    }\n  },\n  images: {\n    avatar: {\n      width: 48,\n      height: 48,\n      borderRadius: 99999\n    }\n  },\n  // variants for buttons\n  buttons: {\n    menu: {\n      display: [null, null, \"none\"]\n    },\n    // default variant for MenuButton\n    // you can reference other values defined in the theme\n    defaultBtn: {\n      borderRadius: \"45px\",\n      fontSize: [\"14px\", null, null, 2],\n      letterSpacings: \"-0.15px\",\n      padding: [\"12px 20px\", null, \"15px 30px\"],\n      fontFamily: \"body\",\n      cursor: \"pointer\",\n      lineHeight: 1.2,\n      transition: \"all 0.25s\",\n      fontWeight: 500,\n      \"&:focus\": {\n        outline: 0\n      }\n    },\n    primary: {\n      variant: \"buttons.defaultBtn\",\n      color: \"white\",\n      bg: \"primary\",\n      \"&:hover\": {\n        boxShadow: \"rgba(233, 76, 84, 0.57) 0px 9px 20px -5px\"\n      }\n    },\n    whiteButton: {\n      variant: \"buttons.defaultBtn\",\n      color: \"heading_secondary\",\n      bg: \"white\",\n      \"&:hover\": {\n        boxShadow: \"rgba(0, 0, 0, 0.5) 0px 12px 24px -10px\"\n      }\n    },\n    secondary: {\n      variant: \"buttons.defaultBtn\",\n      border: \"2px solid\",\n      borderColor: \"primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      padding: [\"10px 15px\", null, \"15px 30px\"],\n      \"&:hover\": {\n        color: \"white\",\n        bg: \"primary\"\n      }\n    },\n    textButton: {\n      variant: \"buttons.defaultBtn\",\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      color: \"white\",\n      svg: {\n        fontSize: [4, 6],\n        mr: 2\n      }\n    }\n  },\n  cards: {\n    primary: {\n      padding: 2,\n      borderRadius: 4\n    },\n    offer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flex: [\"1 1 calc(50% - 16px)\", \"1 1 20%\"],\n      minHeight: 130,\n      m: 2,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EDEFF6\",\n      borderRadius: 5\n    },\n    featureCard: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      flexDirection: \"row\",\n      p: 3\n    }\n  },\n  forms: {\n    label: {\n      fontSize: 1,\n      fontWeight: \"bold\"\n    },\n    input: {\n      borderRadius: 8,\n      borderColor: \"border_color\",\n      height: 60,\n      \"&:focus\": {\n        borderColor: \"primary\",\n        boxShadow: t => `0 0 0 2px ${t.colors.primary}`,\n        outline: \"none\"\n      }\n    }\n  },\n  badges: {\n    primary: {\n      color: \"background\",\n      bg: \"#28A5FF\",\n      borderRadius: 30,\n      p: \"3px 11px\",\n      fontSize: 1,\n      letterSpacing: \"-0.5px\"\n    },\n    outline: {\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 0 1px\"\n    }\n  },\n  styles: {\n    // To add base, top-level styles to the <body> element, use theme.styles.root.\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\",\n      fontSmoothing: \"antialiased\",\n      // Modal Global Style\n      \".modal-video-close-btn\": {\n        cursor: \"pointer\"\n      },\n      \".modal-video-movie-wrap\": {\n        margin: 6,\n        width: \"auto\"\n      }\n    },\n    // Divider styles\n    hr: {\n      border: 0,\n      borderBottom: \"1px solid\",\n      borderColor: \"#D9E0E7\"\n    },\n    // also you can use other HTML elements style here\n    ul: {\n      listStyle: \"none\"\n    },\n    srOnly: {\n      border: \"0 !important\",\n      clip: \"rect(1px, 1px, 1px, 1px) !important\",\n      clipPath: \"inset(50%) !important\",\n      height: \"1px !important\",\n      margin: \"-1px !important\",\n      overflow: \"hidden !important\",\n      padding: \"0 !important\",\n      position: \"absolute !important\",\n      width: \"1px !important\",\n      whiteSpace: \"nowrap !important\"\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/theme/index.js\n");

/***/ }),

/***/ "./src/assets/Club_logo.png":
/*!**********************************!*\
  !*** ./src/assets/Club_logo.png ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"src\":\"/_next/static/media/Club_logo.e4fcdd12.png\",\"height\":102,\"width\":267,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2FClub_logo.e4fcdd12.png&w=8&q=70\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXRzL0NsdWJfbG9nby5wbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLENBQUMseUtBQXlLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL3NyYy9hc3NldHMvQ2x1Yl9sb2dvLnBuZz80NTFkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcInNyY1wiOlwiL19uZXh0L3N0YXRpYy9tZWRpYS9DbHViX2xvZ28uZTRmY2RkMTIucG5nXCIsXCJoZWlnaHRcIjoxMDIsXCJ3aWR0aFwiOjI2NyxcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZDbHViX2xvZ28uZTRmY2RkMTIucG5nJnc9OCZxPTcwXCJ9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assets/Club_logo.png\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ./is-plain-object */ \"./node_modules/next/dist/lib/is-plain-object.js\");\nfunction isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n        if (err === null) {\n            return new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + '');\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLDBFQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcz8xNzhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNFcnJvcjtcbmV4cG9ydHMuZ2V0UHJvcGVyRXJyb3IgPSBnZXRQcm9wZXJFcnJvcjtcbnZhciBfaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoXCIuL2lzLXBsYWluLW9iamVjdFwiKTtcbmZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyciAhPT0gbnVsbCAmJiAnbmFtZScgaW4gZXJyICYmICdtZXNzYWdlJyBpbiBlcnI7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJFcnJvcihlcnIpIHtcbiAgICBpZiAoaXNFcnJvcihlcnIpKSB7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICAvLyBwcm92aWRlIGJldHRlciBlcnJvciBmb3IgY2FzZSB3aGVyZSBgdGhyb3cgdW5kZWZpbmVkYFxuICAgICAgICAvLyBpcyBjYWxsZWQgaW4gZGV2ZWxvcG1lbnRcbiAgICAgICAgaWYgKHR5cGVvZiBlcnIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdBbiB1bmRlZmluZWQgZXJyb3Igd2FzIHRocm93biwgJyArICdzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdBIG51bGwgZXJyb3Igd2FzIHRocm93biwgJyArICdzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IEVycm9yKCgwLCBfaXNQbGFpbk9iamVjdCkuaXNQbGFpbk9iamVjdChlcnIpID8gSlNPTi5zdHJpbmdpZnkoZXJyKSA6IGVyciArICcnKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-plain-object.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/lib/is-plain-object.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getObjectClassLabel = getObjectClassLabel;\nexports.isPlainObject = isPlainObject;\nfunction getObjectClassLabel(value) {\n    return Object.prototype.toString.call(value);\n}\nfunction isPlainObject(value) {\n    if (getObjectClassLabel(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n\n//# sourceMappingURL=is-plain-object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1wbGFpbi1vYmplY3QuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwyQkFBMkI7QUFDM0IscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2x1Yi1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL2lzLXBsYWluLW9iamVjdC5qcz8wZDcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRPYmplY3RDbGFzc0xhYmVsID0gZ2V0T2JqZWN0Q2xhc3NMYWJlbDtcbmV4cG9ydHMuaXNQbGFpbk9iamVjdCA9IGlzUGxhaW5PYmplY3Q7XG5mdW5jdGlvbiBnZXRPYmplY3RDbGFzc0xhYmVsKHZhbHVlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG59XG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XG4gICAgaWYgKGdldE9iamVjdENsYXNzTGFiZWwodmFsdWUpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWx1ZSk7XG4gICAgcmV0dXJuIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGU7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLXBsYWluLW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-plain-object.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NsdWItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ }),

/***/ "@emotion/react":
/*!*********************************!*\
  !*** external "@emotion/react" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@emotion/react");

/***/ }),

/***/ "@theme-ui/core":
/*!*********************************!*\
  !*** external "@theme-ui/core" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@theme-ui/core");

/***/ }),

/***/ "@theme-ui/core/jsx-dev-runtime":
/*!*************************************************!*\
  !*** external "@theme-ui/core/jsx-dev-runtime" ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@theme-ui/core/jsx-dev-runtime");

/***/ }),

/***/ "next/dist/compiled/react-is":
/*!**********************************************!*\
  !*** external "next/dist/compiled/react-is" ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react-is");

/***/ }),

/***/ "../../../server/denormalize-page-path":
/*!************************************************************!*\
  !*** external "next/dist/server/denormalize-page-path.js" ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/denormalize-page-path.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-middleware-regex":
/*!****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-middleware-regex.js" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/get-middleware-regex.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-icons/fa":
/*!*********************************!*\
  !*** external "react-icons/fa" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/fa");

/***/ }),

/***/ "react-stickynode":
/*!***********************************!*\
  !*** external "react-stickynode" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-stickynode");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "theme-ui":
/*!***************************!*\
  !*** external "theme-ui" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("theme-ui");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/_app.js"));
module.exports = __webpack_exports__;

})();